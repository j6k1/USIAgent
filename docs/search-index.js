var N=null,E="",T="t",U="u",searchIndex={};
var R=["IsReady","SetOption","UsiNewGame","Position","PonderHit","GameOver","SendUsiCommand","QuitReady","Infinite","GameStart","eventdispatcherror","instant","to_instant","eventqueue","usiagent","InvalidStateError","AbortedError","MutexLockFailedError","PlayerError","InvalidState","TypeConvertError","KifuWriteError","SfenStringConvertError","IOError","SelDepth","Hashfull","filelogger","result","string","btreemap","mochigomakind","bestmove","usigotimelimit","onerrorhandler","usereventqueue","checkmate","userevent","dispatch_events","usiinfosubcommand","infosenderror","usiinfomessage","mochigomacollections","syseventoptionkind","option","appliedmove","hashmap","GameEnd","kifuwriteerror","sfenstringconverterror","filesfenkifuwriter","duration","selfmatchresult","selfmatchrunningerror","typeconverterror","positionparseresult","obtainkind","is_nari","to_applied_move","banmen","bitboard","komakind","legalmove","komasrcposition","komadsttoposition","komadstputposition","partialstate","shogierror","apply_moves","kyokumenmap","kyokumenhash","invalidstateerror","start_default","systemeventqueue","usiagentrunningerror","start_with_log_path","try_from","try_into","borrow_mut","type_id","usiagent::event","borrow","typeid","to_owned","clone_into","to_string","usiagent::error","usiagent::command","usiagent::logger","usiagent::output","usiagent::input","usiagent::player","usiagent::shogi","usiagent::interpreter","usiagent::hash","usiagent::selfmatch","usiagent::protocol","usiagent::rule","event_kind","add_handler","add_once_handler","tomovestringconverterror","to_sfen","usioutputcreateerror","to_usi_command","validate","usioutput","max_index","mutexguard","eventhandlererror","poisonerror","usieventsenderror","selfmatchmessage","legalmoveto","legalmoveput","systemeventkind","syseventoption","usigomatetimelimit","usereventkind","gameendstate","usiinfosubcommandkind","usiopttype","usiinfosender","consoleinfosender","komaposition","twokeyhashmap","appliedmoveto","appliedmoveput","usiinitialposition","usigobyoyomiorinc","movedkind","selfmatchgameendstate","danconverterror","usiprotocolerror","usicommand","usiscore","usiscoremate","partial_cmp","ordering","foulkind","formatter","description","OnAcceptMove","SystemEvent","SystemEventKind","SysEventOption","SysEventOptionKind","UsiInitialPosition","UsiGoTimeLimit","UsiGoMateTimeLimit","UsiGoByoyomiOrInc","UserEvent","UserEventKind","SelfMatchEvent","MovedKind","SelfMatchGameEndState","GameEndState","SelfMatchEventKind","MapEventKind","EventDispatcher","EventQueue","USIEventDispatcher","DanConvertError","EventDispatchError","EventHandlerError","ToMoveStringConvertError","UsiOutputCreateError","UsiEventSendError","InfoSendError","USIAgentStartupError","USIAgentRunningError","ShogiError","UsiProtocolError","SelfMatchRunningError","UsiCommand","UsiInfoSubCommand","UsiInfoSubCommandKind","UsiScoreMate","CheckMate","UsiOptType","FileLogger","AddIndent","USIOutputWriter","USIStdOutputWriter","USIStdErrorWriter","USIInputReader","USIStdInputReader","UsiInfoMessage","USIPlayer","InfoSender","USIInfoSender","ConsoleInfoSender","KomaPosition","KomaSrcPosition","KomaDstToPosition","KomaDstPutPosition","MochigomaCollections","ObtainKind","MochigomaKind","USIInterpreter","InitialHash","TwoKeyHashMap","KyokumenMap","KyokumenHash","SelfMatchResult","SelfMatchEngine","SelfMatchMessage","SelfMatchKifuWriter","FileSfenKifuWriter","PositionParseResult","UsiOutput","ToUsiCommand","PositionParser","PartialState","LegalMove","AppliedMove","SquareToPoint","LegalMoveTo","LegalMovePut","AppliedMoveTo","AppliedMovePut","OnErrorHandler","駒の位置…","指し手","盤面上の駒を動かす手","持ち駒を置く手","移動元の左上からx * 9 + yで表されるインデックス","移動先の左上からx * 9 + yで表されるインデックス","置く駒の種類","`Move`へ変換","盤面上の位置と駒の種別を元に合法手を列挙して返す 渡した引数の状態が不正な場合の動作は未定義","盤面上の位置を元に王を取れる合法手のみを列挙して返す","盤面上の位置と駒の種別を元に合法手を列挙して返す","中断（USIプロトコルの仕様にはない。返してもGUI側にコマンドは送信されない）","usiコマンド受信イベント","isreadyコマンド受信イベント","setoptionコマンド受信イベント","usinewgameコマンド受信イベント","positionコマンド受信イベント","goコマンド受信イベント","stopコマンド受信イベント","ponderhitコマンド受信イベント","quitコマンド受信イベント","gomeoverコマンド受信イベント","USIコマンド送信要求","文字列","真偽値","存在する（値がないオプション用）","指定あり","思考の停止","go ponderの予測手にHit","終了要求","引き分け","対局開始","手が指された","対局終了","システムイベントキューを処理するためのイベントディスパッチャ","`Instant`へ変換(制限時間未指定時やinfinite指定時などはNoneが返る)","思考を中断したケースで指し手文字列を生成しようとした","オブジェクトの排他的ロックの獲得に失敗","状態不正","`USIPlayer`の実装がエラーを投げた","入出力時のエラー","棋譜書き込み時のエラー","システムイベントキュー","デフォルト設定で開始（ログファイルのパスlogs/log.txt,ログをファイルに記録）","ログファイルのパスを指定して開始","その他","出力を行う","infoコマンドを出力する"];
searchIndex["usiagent"]={"doc":"USIプロトコルを用いた将棋AIを実装するためのフレームワーク","i":[[3,R[220],R[14],"エラーを受け取ってロガーで出力する構造体",N,N],[3,"SandBox",E,"処理を実行した結果発生したエラーを自動で出力するためのサンドボックス",N,N],[3,"UsiAgent",E,"USIプロトコルをイベントシステムを用いてやり取りするための機能の実装",N,N],[4,R[141],E,"go ponderによって生成された手を相手の指し手が決まるまで覚えておくための構造体",N,N],[13,"Some",E,"指し手を格納済み",0,N],[13,"None",E,"まだ指し手が格納されていない",0,N],[0,"event",E,"イベント処理",N,N],[3,R[159],R[79],"イベントキュー",N,N],[3,R[160],E,"`EventDispatcher`の実装",N,N],[4,R[142],E,"システムイベント",N,N],[13,"Usi",E,R[233],1,N],[13,R[0],E,R[234],1,N],[13,R[1],E,R[235],1,N],[13,R[2],E,R[236],1,N],[13,R[3],E,R[237],1,N],[13,"Go",E,R[238],1,N],[13,"Stop",E,R[239],1,N],[13,R[4],E,R[240],1,N],[13,"Quit",E,R[241],1,N],[13,R[5],E,R[242],1,N],[13,R[6],E,R[243],1,N],[13,R[7],E,"終了",1,N],[4,R[143],E,"システムイベント種別",N,N],[13,"Usi",E,R[233],2,N],[13,R[0],E,R[234],2,N],[13,R[1],E,R[235],2,N],[13,R[2],E,R[236],2,N],[13,R[3],E,R[237],2,N],[13,"Go",E,R[238],2,N],[13,"Stop",E,R[239],2,N],[13,R[4],E,R[240],2,N],[13,"Quit",E,R[241],2,N],[13,R[5],E,R[242],2,N],[13,R[6],E,R[243],2,N],[13,R[7],E,"終了",2,N],[4,R[144],E,"USIオプション項目",N,N],[13,"Str",E,R[244],3,N],[13,"Num",E,"数値",3,N],[13,"Bool",E,R[245],3,N],[13,"Exist",E,R[246],3,N],[4,R[145],E,"USIオプション項目の種別",N,N],[13,"Str",E,R[244],4,N],[13,"Num",E,"数値",4,N],[13,"Bool",E,R[245],4,N],[13,"Exist",E,R[246],4,N],[4,R[146],E,"初期局面",N,N],[13,"Sfen",E,"平手初期局面以外",5,N],[13,"Startpos",E,"平手初期局面",5,N],[4,"UsiGo",E,"goコマンド",N,N],[13,"Go",E,"go",6,N],[13,"Ponder",E,"go ponder",6,N],[13,"Mate",E,"go mate",6,N],[4,R[147],E,"持ち時間",N,N],[13,"None",E,"指定なし",7,N],[13,"Limit",E,R[247],7,N],[13,R[8],E,"無制限(go infinite)",7,N],[4,R[148],E,"go mate時の制限時間",N,N],[13,"None",E,"未指定",8,N],[13,"Limit",E,R[247],8,N],[13,R[8],E,"無制限(go mate infinite)",8,N],[4,R[149],E,"持ち時間（'go byoyomi ' or 'go binc , winc'）",N,N],[13,"Byoyomi",E,"秒読み",9,N],[13,"Inc",E,"加算時間（フィッシャークロックルール）",9,N],[4,R[150],E,"ユーザーイベント",N,N],[13,"Stop",E,R[248],10,N],[13,R[4],E,R[249],10,N],[13,"Quit",E,R[250],10,N],[4,R[151],E,"ユーザーイベントの種別",N,N],[13,"Stop",E,R[248],11,N],[13,R[4],E,R[249],11,N],[13,"Quit",E,R[250],11,N],[4,R[152],E,"自己対局時のイベント",N,N],[13,R[9],E,R[252],12,N],[13,"Moved",E,R[253],12,N],[13,R[46],E,R[254],12,N],[13,"Abort",E,"中断",12,N],[4,"Moved",E,"指された手",N,N],[13,"To",E,"盤面上の駒の移動",13,N],[13,"Put",E,"持ち駒を置いた",13,N],[4,R[153],E,"動かした駒の種類",N,N],[13,"Fu",E,"歩",14,N],[13,"Kyou",E,"香",14,N],[13,"Kei",E,"桂",14,N],[13,"Gin",E,"銀",14,N],[13,"Kin",E,"金",14,N],[13,"Kaku",E,"角",14,N],[13,"Hisha",E,"飛車",14,N],[13,"SOu",E,"王",14,N],[13,"GOu",E,"玉",14,N],[13,"FuN",E,"と金",14,N],[13,"KyouN",E,"成香",14,N],[13,"KeiN",E,"成桂",14,N],[13,"GinN",E,"成銀",14,N],[13,"KakuN",E,"馬",14,N],[13,"HishaN",E,"龍",14,N],[13,"Blank",E,"空白",14,N],[4,R[154],E,"自己対局時の対局終了時の状態",N,N],[13,"Win",E,"勝ち",15,N],[13,"Resign",E,"投了",15,N],[13,"NyuGyokuWin",E,"入玉宣言勝ち",15,N],[13,"NyuGyokuLose",E,"入玉宣言勝ちを宣言したが条件を満たさず負けになった",15,N],[13,"Draw",E,R[251],15,N],[13,"Foul",E,"反則負け",15,N],[13,"Timeover",E,"時間切れ負け",15,N],[4,R[155],E,"対局の勝敗",N,N],[13,"Win",E,"勝ち",16,N],[13,"Lose",E,"負け",16,N],[13,"Draw",E,R[251],16,N],[4,"FoulKind",E,"自己対局時の反則負けの種類",N,N],[13,"InvalidMove",E,"合法手でない",17,N],[13,"PutFuAndMate",E,"打ち歩詰め",17,N],[13,"Sennichite",E,"千日手",17,N],[13,"SennichiteOu",E,"連続王手の千日手",17,N],[13,"NotRespondedOute",E,"王手に応じなかった",17,N],[13,"Suicide",E,"自分から相手に王を取られる位置に駒を動かした",17,N],[4,R[156],E,"自己対局時のイベントの種別",N,N],[13,R[9],E,R[252],18,N],[13,"Moved",E,R[253],18,N],[13,R[46],E,R[254],18,N],[13,"Abort",E,"中断",18,N],[6,"SystemEventQueue",E,R[263],N,N],[6,"SystemEventDispatcher",E,R[255],N,N],[6,"UserEventQueue",E,"ユーザーイベントキュー",N,N],[6,"UserEventDispatcher",E,R[255],N,N],[6,"SelfMatchEventQueue",E,"自己対局イベントキュー",N,N],[6,"SelfMatchEventDispatcher",E,"自己対局イベントキューを処理するためのイベントディスパッチャ",N,N],[8,R[157],E,"enumを自身の各項目に対応する種別を表現する型の対応する項目にマップする",N,N],[10,R[97],E,E,19,[[["self"]],["k"]]],[8,R[158],E,"イベントディスパッチャ",N,N],[10,R[98],E,"イベントハンドラの追加",20,[[["self"],["k"],["f"]]]],[10,R[99],E,"一度だけ実行されるイベントハンドラの追加",20,[[["self"],["k"],["f"]]]],[10,R[37],E,"イベントのディスパッチ",20,[[["self"],[T],["mutex"]],[[R[10],[R[13]]],[R[27],[R[10]]]]]],[11,R[12],E,R[256],7,[[[R[11]],["self"],["teban"]],[[R[43],[R[11]]],[R[11]]]]],[11,"calc_next_limit",E,"次の手番時の制限時間を計算…",7,[[["teban"],[R[11]],["self"]],[[R[43],["u64"]],["u64"]]]],[11,R[12],E,R[256],8,[[["self"],[R[11]]],[[R[43],[R[11]]],[R[11]]]]],[11,"new",E,"`EventQueue`の生成",21,[[],[R[13]]]],[11,"push",E,"イベントの追加",21,[[["self"],["e"]]]],[11,"clear",E,"イベントキューのクリア",21,[[["self"]]]],[11,"drain_events",E,"イベントキューの中身の取り出し（呼出し直後キューは空になる）",21,[[["self"]],["vec"]]],[11,"has_event",E,"キューにイベントがあるか否か？",21,[[["self"]],["bool"]]],[11,"new",E,"`USIEventDispatcher`の生成",22,[[["arc"]],["usieventdispatcher"]]],[0,"error",R[14],"各種エラーの定義",N,N],[3,R[15],R[85],R[259],N,N],[12,"0",E,E,23,N],[3,R[161],E,"盤面上の段に値をマッピングできなかった",N,N],[12,"0",E,E,24,N],[4,R[162],E,"イベント処理時のエラー",N,N],[13,"ErrorFromHandler",E,"イベントハンドラ内エラー発生",25,N],[13,R[17],E,"イベントキューの排他的ロックの取得に失敗した",25,N],[13,"ContainError",E,"エラーが含まれる",25,N],[4,R[163],E,"イベントハンドラ内で発生したエラー",N,N],[13,"Fail",E,"その他のエラー",26,N],[13,R[19],E,"内部状態不正",26,N],[13,R[18],E,"`USIPlayer`の実装が投げたエラー",26,N],[4,R[164],E,"指し手の文字列表現と内部表現の変換時のエラー",N,N],[13,"CharConvert",E,"値から盤面の段への変換に失敗した",27,N],[13,R[16],E,R[257],27,N],[4,R[165],E,"USIコマンドの生成時のエラー",N,N],[13,"ValidationError",E,"生成元のオブジェクトの状態が不正",28,N],[13,R[15],E,"状態が不正",28,N],[13,"InvalidInfoCommand",E,"infoコマンドの生成元のオブジェクトの状態が不正",28,N],[13,"ConvertError",E,"指し手の文字列生成時のエラー",28,N],[13,R[16],E,R[257],28,N],[4,R[167],E,"infoコマンド出力時のエラー",N,N],[13,"Fail",E,E,29,N],[4,R[20],E,"USIコマンド文字列の型変換エラー",N,N],[13,"SyntaxError",E,"書式エラー",30,N],[13,"LogicError",E,"内部実装の誤りを検出",30,N],[4,R[168],E,"USIAgent開始時のエラー",N,N],[13,"MutexLockFailedOtherError",E,R[258],31,N],[13,R[23],E,R[261],31,N],[13,R[18],E,R[260],31,N],[4,R[169],E,"USIAgentの実行中のエラー",N,N],[13,R[17],E,R[258],32,N],[13,"StartupError",E,"開始時のエラー",32,N],[4,R[170],E,"将棋のルールに関するエラー",N,N],[13,R[19],E,R[259],33,N],[4,R[171],E,"usiプロトコル関係のエラー",N,N],[13,R[19],E,R[259],34,N],[4,R[172],E,"自己対局機能実行時のエラー",N,N],[13,R[19],E,R[259],35,N],[13,R[18],E,R[260],35,N],[13,"PlayerThreadError",E,"プレイヤースレッド内でエラー発生",35,N],[13,R[23],E,R[261],35,N],[13,R[21],E,R[262],35,N],[13,"RecvError",E,"`crossbeam_channel`によるメッセージ受信時のエラー",35,N],[13,"SendError",E,"`crossbeam_channel`によるメッセージ送信時のエラー",35,N],[13,"ThreadJoinFailed",E,"ブリッジスレッド内でエラー発生",35,N],[13,"Fail",E,R[266],35,N],[4,R[22],E,"sfen文字列の生成時エラー",N,N],[13,"ToMoveString",E,"指し手文字列生成時のエラー",36,N],[13,R[20],E,"型変換時のエラー",36,N],[13,"InvalidFormat",E,"不正なsfen文字列フォーマット",36,N],[4,R[21],E,R[262],N,N],[13,"Fail",E,R[266],37,N],[13,R[19],E,R[259],37,N],[13,R[22],E,"sfen文字←→内部表現変換時のエラー",37,N],[13,R[23],E,R[261],37,N],[8,R[18],E,"`USIPlayer`の実装から投げられるエラーであることを示すマーカートレイト",N,N],[0,"command",R[14],"USIプロトコル準拠のコマンドを取り扱う",N,N],[4,R[173],R[86],"USIプロトコル準拠のコマンド",N,N],[13,"UsiOk",E,"usiok",38,N],[13,"UsiId",E,"id name {name}, id author {author}",38,N],[13,"UsiReadyOk",E,"readyok",38,N],[13,"UsiBestMove",E,R[31],38,N],[13,"UsiInfo",E,"info",38,N],[13,"UsiOption",E,R[43],38,N],[13,"UsiCheckMate",E,R[35],38,N],[4,"BestMove",E,R[222],N,N],[13,"Move",E,"通常の指し手（ponderをOptionで指定可能）",39,N],[13,"Resign",E,"投了",39,N],[13,"Win",E,"入玉勝ち宣言",39,N],[13,"Abort",E,R[232],39,N],[4,R[174],E,"infoコマンドのサブコマンド",N,N],[13,"Depth",E,"depth",40,N],[13,R[24],E,"seldepth",40,N],[13,"Time",E,"time",40,N],[13,"Nodes",E,"nodes",40,N],[13,"Pv",E,"pv",40,N],[13,"MultiPv",E,"multipv",40,N],[13,"Score",E,"score",40,N],[13,"CurMove",E,"curmove",40,N],[13,R[25],E,"hashfull",40,N],[13,"Nps",E,"nps",40,N],[13,"Str",E,R[28],40,N],[4,R[175],E,"infoサブコマンドの種別",N,N],[13,"Depth",E,"depth",41,N],[13,R[24],E,"seldepth",41,N],[13,"Time",E,"time",41,N],[13,"Nodes",E,"nodes",41,N],[13,"Pv",E,"pv",41,N],[13,"MultiPv",E,"multipv",41,N],[13,"Score",E,"score",41,N],[13,"CurMove",E,"curmove",41,N],[13,R[25],E,"hashfull",41,N],[13,"Nps",E,"nps",41,N],[13,"Str",E,R[28],41,N],[4,"UsiScore",E,"infoコマンドのscore",N,N],[13,"Cp",E,"score cp ",42,N],[13,"CpUpper",E,"score cp upper",42,N],[13,"CpLower",E,"score cp lower",42,N],[13,"Mate",E,"score mate ",42,N],[13,"MateUpper",E,"score mate upper",42,N],[13,"MateLower",E,"score mate lower",42,N],[4,R[176],E,"infoコマンドのscoreサブコマンドのmateの値",N,N],[13,"Num",E,"数値",43,N],[13,"Plus",E,"+",43,N],[13,"Minus",E,"-",43,N],[4,R[177],E,"詰め将棋の解答",N,N],[13,"Moves",E,"詰みまでの指し手",44,N],[13,"NotiImplemented",E,"未実装であることをGUI側に伝える",44,N],[13,"Timeout",E,"時間内に詰みを見つけられなかった",44,N],[13,"Nomate",E,"詰まない",44,N],[13,"Abort",E,R[232],44,N],[4,R[178],E,"optionコマンドの値",N,N],[13,"Check",E,"check",45,N],[13,"Spin",E,"spin",45,N],[13,"Combo",E,"combo",45,N],[13,"Button",E,"button",45,N],[13,"String",E,R[28],45,N],[13,"FileName",E,"filename",45,N],[11,"get_kind",E,"対応するコマンド種別を取得する",40,[[["self"]],[R[119]]]],[0,"logger",R[14],"ログ出力",N,N],[3,R[179],R[87],"ファイルへ出力する`Logger`の実装",N,N],[8,"Logger",E,"ログの出力",N,N],[10,"logging",E,"ログの出力処理の本体の実装",46,[[["self"],[R[28]]],["bool"]]],[11,"logging_error",E,"エラーを発生元へたどりながら改行しつつインデントして出力する",46,[[["self"],["e"]],["bool"]]],[11,"new",E,"`FileLogger`の生成 # Arguments",47,[[[R[28]]],[[R[27],[R[26],"error"]],["error"],[R[26]]]]],[0,R[28],R[14],"Stringに関連した機能",N,N],[8,R[180],"usiagent::string","文字列の各行をインデントする",N,N],[10,"add_indent",E,"文字列の各行をインデントした結果を返す",48,[[["u32"],["self"]],[R[28]]]],[0,"output",R[14],"USIコマンド文字列、エラーメッセージ等の出力",N,N],[3,R[182],R[88],"USIコマンド文字列を標準出力へ出力する`USIOutputWriter`の実装",N,N],[3,R[183],E,"標準エラー出力へ出力を書き込むためのオブジェクト",N,N],[8,R[181],E,"USIコマンド文字列を出力",N,N],[10,"write",E,R[267],49,[[["self"],["vec"]],[[R[27],["usize"]],["usize"]]]],[11,"new",E,E,50,[[],["usistdoutputwriter"]]],[11,"write",E,R[267],51,[[["str"]],[[R[27],["usize"]],["usize"]]]],[0,"input",R[14],"入力の読み取り",N,N],[3,R[185],R[89],"標準入力から読み取る`USIInputReader`の実装",N,N],[8,R[184],E,"入力を読み取る",N,N],[10,"read",E,E,52,[[["self"]],[[R[27],[R[28]]],[R[28]]]]],[11,"new",E,"`USIStdInputReader`の生成",53,[[],["usistdinputreader"]]],[0,"player",R[14],"AIの本体を実装するためのtrait等",N,N],[3,R[189],R[90],"infoコマンドを標準出力へ出力する`InfoSender`の実装",N,N],[3,R[190],E,"コンソールへ出力する`InfoSender`の実装（出力用に別にスレッドを持ってはおらず呼び出し時に直接出力する）",N,N],[4,R[186],E,"infoコマンドの発行スレッドに対してコマンドの出力、スレッドの停止などを通知するためのメッセージオブジェクト",N,N],[13,"Commands",E,"infoコマンドのサブコマンドのリスト",54,N],[13,"Quit",E,"infoコマンド発行スレッドを停止させる",54,N],[8,R[187],E,"プレイヤー（AI本体）の実装",N,N],[18,"ID",E,"このAIの名前",55,N],[18,"AUTHOR",E,"このAIの作者",55,N],[10,"get_option_kinds",E,"サポートしているオブションの一覧をオプション名をキーとしたマップで返す",55,[[["self"]],[[R[29],[R[28],R[42]]],[R[27],[R[29]]]]]],[10,"get_options",E,"サポートしているオプションに関する設定情報（maxとminの値など）をオプション名をキーとしたマップで返す",55,[[["self"]],[[R[29],[R[28],R[120]]],[R[27],[R[29]]]]]],[10,"take_ready",E,"プレイヤーの機能で必要な時間のかかる前処理などをここで行う",55,[[["self"]],[R[27]]]],[10,"set_option",E,"オプションを設定する # Arguments * `name` - オプションの名前 * `value` -…",55,[[["self"],[R[28]],[R[115]]],[R[27]]]],[10,"newgame",E,"ゲーム開始前の処理。対局ごとに毎回呼ばれる",55,[[["self"]],[R[27]]]],[10,"set_position",E,"局面の初期化。毎回初期局面と現在の局面までの全ての指し手のリストが送られてくる。 # Arguments *…",55,[[[R[58]],[R[30]],["u32"],[R[45],[R[30],"u32"]],["vec",["move"]],["self"],["teban"],["move"]],[R[27]]]],[10,"think",E,"思考開始。この関数の戻り値が指し手となる。AIの実装の核となる部分 # Arguments *…",55,[[[R[11]],[R[32]],["arc",["mutex"]],["mutex",[R[34]]],["arc",["mutex"]],["s"],["mutex",[R[33]]],["self"]],[[R[27],[R[31]]],[R[31]]]]],[10,"think_ponder",E,"思考開始。この関数の戻り値が指し手となる。AIの実装の核となる部分 # Arguments * `limit` -…",55,[[["mutex",[R[34]]],["mutex",[R[33]]],["arc",["mutex"]],["arc",["mutex"]],["self"],["s"],[R[32]]],[[R[27],[R[31]]],[R[31]]]]],[10,"think_mate",E,"詰め将棋回答時に呼ばれる関数 # Arguments * `limit` - 持ち時間 *…",55,[[["mutex",[R[33]]],["arc",["mutex"]],["arc",["mutex"]],[R[116]],["self"],["s"],["mutex",[R[34]]]],[[R[27],[R[35]]],[R[35]]]]],[10,"on_stop",E,"…",55,[[["self"],[R[36]]],[R[27]]]],[10,"on_ponderhit",E,"…",55,[[["self"],[R[36]]],[R[27]]]],[10,"gameover",E,"対局終了時に呼ばれる # Arguments * `s` - 勝敗を表すオブジェクト * `event_queue`…",55,[[["arc",["mutex"]],["arc",["mutex"]],[R[118]],["self"],["mutex",[R[33]]],["mutex",[R[34]]]],[R[27]]]],[10,"on_quit",E,"…",55,[[["self"],[R[36]]],[R[27]]]],[10,"quit",E,"終了時に呼ばれる関数",55,[[["self"]],[R[27]]]],[11,"handle_events",E,"…",55,[[["self"],["mutex"],["mutex"]],[["bool"],[R[27],["bool"]]]]],[11,R[37],E,"`USIPlayer::handle_events`から呼ばれる内部関数。イベントキュー内のイベントを処理する。 #…",55,[[["self"],["mutex"],["mutex"]],[[R[10],[R[34],R[36]]],[R[27],[R[10]]]]]],[11,R[67],E,"手のリストを現在の局面に適用した結果を返す # Arguments * `state` -…",55,[[["state"],[R[41]],["vec"],[T],["f"],["self"],["teban"]]]],[8,R[188],E,R[268],N,N],[10,"send",E,R[268],56,[[["vec",[R[38]]],["self"],[R[38]]],[[R[27],[R[39]]],[R[39]]]]],[11,"new",E,"`USIInfoSender`の生成",57,[[[R[40]],["sender",[R[40]]]],[R[121]]]],[11,"new",E,"`ConsoleInfoSender`の生成",58,[[["bool"]],[R[122]]]],[0,"shogi",R[14],"将棋の盤面や持ち駒等の定義",N,N],[3,"Banmen",R[91],"盤面",N,N],[12,"0",E,E,59,N],[3,R[191],E,"駒の位置 `KomaPosition(x,y)`,`x`は右側から1 originのインデックス、`y`は上側から1…",N,N],[12,"0",E,E,60,N],[12,"1",E,E,60,N],[3,R[192],E,"駒の位置 `KomaSrcPosition(x,y)`,`x`は右側から1…",N,N],[12,"0",E,E,61,N],[12,"1",E,E,61,N],[3,R[193],E,"駒の位置 `KomaDstToPosition(x,y,b)`,`x`は右側から1…",N,N],[12,"0",E,E,62,N],[12,"1",E,E,62,N],[12,"2",E,E,62,N],[3,R[194],E,"駒の位置 `KomaDstPutPosition(x,y)`,`x`は右側から1…",N,N],[12,"0",E,E,63,N],[12,"1",E,E,63,N],[4,"KomaKind",E,"盤面上の駒の種別",N,N],[13,"SFu",E,"先手歩",64,N],[13,"SKyou",E,"先手香",64,N],[13,"SKei",E,"先手桂",64,N],[13,"SGin",E,"先手銀",64,N],[13,"SKin",E,"先手金",64,N],[13,"SKaku",E,"先手角",64,N],[13,"SHisha",E,"先手飛車",64,N],[13,"SOu",E,"王",64,N],[13,"SFuN",E,"先手と金",64,N],[13,"SKyouN",E,"先手成り香",64,N],[13,"SKeiN",E,"先手成り桂",64,N],[13,"SGinN",E,"先手成銀",64,N],[13,"SKakuN",E,"先手馬",64,N],[13,"SHishaN",E,"先手龍",64,N],[13,"GFu",E,"後手歩",64,N],[13,"GKyou",E,"後手香",64,N],[13,"GKei",E,"後手桂",64,N],[13,"GGin",E,"後手銀",64,N],[13,"GKin",E,"後手金",64,N],[13,"GKaku",E,"後手角",64,N],[13,"GHisha",E,"後手飛車",64,N],[13,"GOu",E,"玉",64,N],[13,"GFuN",E,"後手と金",64,N],[13,"GKyouN",E,"後手成り香",64,N],[13,"GKeiN",E,"後手成り桂",64,N],[13,"GGinN",E,"後手成銀",64,N],[13,"GKakuN",E,"後手馬",64,N],[13,"GHishaN",E,"後手龍",64,N],[13,"Blank",E,"駒無し",64,N],[4,"Teban",E,"手番",N,N],[13,"Sente",E,"先手",65,N],[13,"Gote",E,"後手",65,N],[4,"Move",E,R[222],N,N],[13,"To",E,"盤面上の駒を移動",66,N],[13,"Put",E,"持ち駒を置く",66,N],[4,R[195],E,"持ち駒",N,N],[13,"Empty",E,"持ち駒が先手後手とも無し",67,N],[13,"Pair",E,"先手後手それぞれの持ち駒を`HashMap<MochigomaKind,u32>`で表現",67,N],[4,R[196],E,"獲った駒の種別",N,N],[13,"Fu",E,"歩",68,N],[13,"Kyou",E,"香",68,N],[13,"Kei",E,"桂",68,N],[13,"Gin",E,"銀",68,N],[13,"Kin",E,"金",68,N],[13,"Kaku",E,"角",68,N],[13,"Hisha",E,"飛車",68,N],[13,"Ou",E,"王または玉",68,N],[13,"FuN",E,"と金",68,N],[13,"KyouN",E,"成り香",68,N],[13,"KeiN",E,"成り桂",68,N],[13,"GinN",E,"成銀",68,N],[13,"KakuN",E,"馬",68,N],[13,"HishaN",E,"龍",68,N],[4,R[197],E,"持ち駒の種別",N,N],[13,"Fu",E,"歩",69,N],[13,"Kyou",E,"香",69,N],[13,"Kei",E,"桂",69,N],[13,"Gin",E,"銀",69,N],[13,"Kin",E,"金",69,N],[13,"Kaku",E,"角",69,N],[13,"Hisha",E,"飛車",69,N],[17,"MOCHIGOMA_KINDS",E,"持ち駒の種別の配列",N,N],[11,"to_nari",E,"駒が成った時のKomaKindを取得",64,[[["self"]],[R[60]]]],[11,R[56],E,"駒が成っているか否かを取得",64,[[["self"]],["bool"]]],[11,"opposite",E,"相手の手番を取得",65,[[["self"]],["teban"]]],[11,R[57],E,"指し手を`AppliedMove`に変換",66,[[["self"]],[R[44]]]],[11,"new",E,"MochigomaCollectionsを生成",67,[[[R[30]],["u32"],[R[45],[R[30],"u32"]]],[R[41]]]],[11,"is_empty",E,"持ち駒は先手後手とも空か？",67,[[["self"]],["bool"]]],[0,"interpreter",R[14],"USIプロトコルの入力を解釈するインタプリタ",N,N],[3,R[198],R[92],"USIプロトコルのコマンド文字列を読み取りイベントを発火する構造体",N,N],[11,"new",E,"`USIInterpreter`の生成",70,[[],["usiinterpreter"]]],[11,"start",E,"処理の開始",70,[[["mutex",[R[72]]],["mutex"],[R[28]],[R[29],[R[28],R[42]]],["arc",["mutex"]],["arc",["mutex"]],[R[42]],["arc"],["self"]]]],[0,"hash",R[14],"局面のハッシュ表現を取り扱う",N,N],[3,R[200],R[93],"主キーとサブキーの二つのキーを用いたマップ",N,N],[3,R[201],E,"先手と後手の局面を`TwoKeyHashMap`を使って管理する",N,N],[3,R[202],E,"局面のハッシュ値を計算する。差分計算対応",N,N],[8,R[199],E,"型に対応するハッシュの初期値",N,N],[18,"INITIAL_HASH",E,E,71,N],[11,"new",E,"`TwoKeyHashMap`の生成",72,[[],[R[124]]]],[11,"get",E,"主キーとサブキーに一致する項目の変更不能な参照を取得",72,[[["k"],["self"]],[[T],[R[43]]]]],[11,"get_mut",E,"主キーとサブキーに一致する項目の変更可能な参照を取得",72,[[["k"],["self"]],[[R[43]],[T]]]],[11,"insert",E,"主キーとサブキーを指定して項目を挿入する",72,[[["self"],["k"],[T]],[R[43]]]],[11,"clear",E,"マップをクリア",72,[[["self"]]]],[11,"new",E,"`KyokumenMap`の生成",73,[[],[R[68]]]],[11,"get",E,"指定された手番の主キーとサブキーに一致する項目の変更不能な参照を取得",73,[[["k"],["self"],["teban"]],[[T],[R[43]]]]],[11,"get_mut",E,"指定された手番の主キーとサブキーに一致する項目の変更可能な参照を取得",73,[[["k"],["self"],["teban"]],[[R[43]],[T]]]],[11,"insert",E,"手番と主キーとサブキーを指定して項目を挿入する",73,[[[T],["self"],["teban"],["k"]],[R[43]]]],[11,"clear",E,"手番を指定してマップをクリア",73,[[["self"],["teban"]]]],[11,"new",E,"`KyokumenHash`の生成",74,[[],[R[69]]]],[11,"calc_main_hash",E,"メインハッシュを計算",74,[[[T],[R[58]],[R[44]],[R[43]],[R[41]],["teban"],["self"]],[T]]],[11,"calc_sub_hash",E,"サブハッシュを計算",74,[[[T],[R[58]],[R[44]],[R[43]],[R[41]],["teban"],["self"]],[T]]],[11,"calc_initial_hash",E,"ハッシュの初期値を計算",74,[[[R[45]],["self"],[R[58]]]]],[0,"selfmatch",R[14],"自己対局機能",N,N],[3,R[207],R[94],"ファイルに記録する`SelfMatchKifuWriter`の実装",N,N],[3,R[203],E,"自己対局の結果",N,N],[12,"game_count",E,"実施した対局回数",75,N],[12,"elapsed",E,"自己対局開始からの経過時間",75,N],[12,"start_dt",E,"自己対局の開始時間",75,N],[12,"end_dt",E,"自己対局の終了時間",75,N],[3,R[204],E,"自己対局エンジン",N,N],[12,"system_event_queue",E,R[263],76,N],[4,R[205],E,"自己対局機能の実装内でやり取りするメッセージオブジェクト",N,N],[13,"Ready",E,"準備完了",77,N],[13,R[9],E,"ゲーム開始",77,N],[13,"StartThink",E,"プレイヤーの思考を開始する",77,N],[13,"StartPonderThink",E,"プレイヤーの思考を開始する（go ponder)",77,N],[13,"NotifyMove",E,"プレイヤーから指し手を返す",77,N],[13,R[4],E,"ponderで予測した指し手と一致した",77,N],[13,"PonderNG",E,"ponderで予測した指し手と一致しない",77,N],[13,R[46],E,R[254],77,N],[13,"Abort",E,"中断",77,N],[13,"Quit",E,"自己対局終了",77,N],[13,"Error",E,"エラー発生を通知",77,N],[8,R[206],E,"棋譜を記録する",N,N],[10,"write",E,"棋譜の書き込みを行う",78,[[["self"],[R[28]],["vec"]],[[R[27],[R[47]]],[R[47]]]]],[11,R[101],E,"開始時の局面のsfen文字列と`Vec<Move>`から棋譜のsfen文字列を生成するメソッドのデフォルト実装",78,[[[R[28]],["self"],["vec"]],[[R[48]],[R[27],[R[28],R[48]]],[R[28]]]]],[11,"new",E,"FileSfenKifuWriterの生成",79,[[[R[28]]],[[R[27],[R[49],R[47]]],[R[49]],[R[47]]]]],[11,"new",E,"`SelfMatchEngine`の生成",76,[[],["selfmatchengine"]]],[11,R[71],E,R[264],76,[[["u32"],[R[43],["u32"]],["eh"],["vec"],["i"],["s"],[R[43],["box"]],["box",["fnmut"]],["rh"],[R[32]],[R[43],["box"]],["self"],["f"],["box",["fnmut"]],[R[50]],[T],[R[43],[R[50]]]],[[R[27],[R[51],R[52]]],[R[51]],[R[52]]]]],[11,R[74],E,R[265],76,[[["u32"],[R[43],["u32"]],["eh"],["vec"],[R[43],["box"]],["s"],[R[43],["box"]],["box",["fnmut"]],[R[28]],["rh"],[R[32]],["self"],["i"],["f"],["box",["fnmut"]],[R[50]],[T],[R[43],[R[50]]]],[[R[27],[R[51],R[52]]],[R[51]],[R[52]]]]],[11,"start",E,"`Logger`,`USIInputReader`を指定して開始",76,[[[R[43],[R[50]]],["u32"],[R[43],["u32"]],["eh"],["vec"],["i"],["s"],[R[43],["box"]],["box",["fnmut"]],["rh"],[R[32]],[R[43],["box"]],["self"],["f"],["l"],["box",["fnmut"]],[R[50]],[T],["r"]],[[R[27],[R[51],R[52]]],[R[51]],[R[52]]]]],[0,"protocol",R[14],"USIプロトコル文字列のパース、組み立て機能",N,N],[3,R[208],R[95],"sfen文字列をパースして得られた局面の情報を表す構造体",N,N],[12,"0",E,E,80,N],[12,"1",E,E,80,N],[12,"2",E,E,80,N],[12,"3",E,E,80,N],[3,R[211],E,"局面を表すsfen文字列のパーサ",N,N],[3,"GoParser",E,"goコマンドのパーサ",N,N],[4,R[209],E,"USIプロトコル準拠のコマンド文字列",N,N],[13,"Command",E,"USIプロトコル準拠のコマンド文字列のリスト",81,N],[8,"ToSfen",E,"USIプロトコル準拠のsfen形式文字列へ変換する",N,N],[10,R[101],E,E,82,[[["self"]],[[R[27],[R[28]]],[R[28]]]]],[8,R[210],E,"USIプロトコル準拠のコマンドを表現するオブジェクトへ変換する",N,N],[10,R[103],E,E,83,[[["self"]],[R[27]]]],[11,"extract",E,"局面の情報を分解してタプルで返す",80,[[]]],[11,"new",E,"`PositionParser`の生成",84,[[],["positionparser"]]],[11,"parse",E,"スペースで分割された局面のsfen文字列をパースした結果を返す",84,[[["self"]],[[R[54]],[R[53],[R[28]]],[R[27],[R[54],R[53]]]]]],[11,"new",E,"`GoParser`の生成",85,[[],["goparser"]]],[11,"parse",E,"USIプロトコルのgoコマンドを半角スペースで分割したものから先頭の'go'を除いたリストを受け取りパースした結果を返す",85,[[["self"]],[[R[27],["usigo",R[53]]],[R[53],[R[28]]],["usigo"]]]],[0,"rule",R[14],"合法手の列挙等、将棋のルールに関連した機能",N,N],[3,R[216],R[96],R[223],N,N],[3,R[217],E,R[224],N,N],[3,R[218],E,R[223],N,N],[3,R[219],E,R[224],N,N],[3,"State",E,"合法手生成に内部で利用するビットボード群と盤面を管理する構造体",N,N],[3,R[212],E,"合法手の生成に内部で利用するビットボードの集合",N,N],[12,"sente_self_board",E,"先手視点の先手側の駒のビットボード",86,N],[12,"sente_opponent_board",E,"先手視点の後手側の駒のビットボード",86,N],[12,"gote_self_board",E,"後手視点の後手側の駒のビットボード",86,N],[12,"gote_opponent_board",E,"後手視点の先手側の駒のビットボード",86,N],[12,"diag_board",E,"角の合法手列挙のためのビットボード",86,N],[12,"rotate_board",E,"飛車の合法手列挙のためのビットボード",86,N],[12,"sente_hisha_board",E,"先手の飛車の位置のビットボード",86,N],[12,"gote_hisha_board",E,"後手の飛車の位置のビットボード",86,N],[12,"sente_kaku_board",E,"先手の角の位置のビットボード",86,N],[12,"gote_kaku_board",E,"後手の角の位置のビットボード",86,N],[12,"sente_kyou_board",E,"先手の香車の位置のビットボード",86,N],[12,"gote_kyou_board",E,"後手の強者の位置のビットボード",86,N],[12,"sente_fu_board",E,"先手の歩の位置のビットボード",86,N],[12,"gote_fu_board",E,"後手の歩の位置のビットボード",86,N],[12,"sente_opponent_ou_position_board",E,"先手視点の後手の玉の位置のビットボード",86,N],[12,"gote_opponent_ou_position_board",E,"後手視点の先手の王の位置のビットボード",86,N],[3,"Kyokumen",E,"局面情報",N,N],[12,"teban",E,E,87,N],[12,"mc",E,E,87,N],[12,"state",E,E,87,N],[3,"Rule",E,"合法手の列挙等を行う将棋のルールを管理",N,N],[19,"BitBoard",E,"合法手を生成するために内部で利用するビットボード",N,N],[12,"merged_bitboard",E,E,88,N],[12,R[59],E,E,88,N],[4,R[213],E,"合法手",N,N],[13,"To",E,R[223],89,N],[13,"Put",E,R[224],89,N],[4,R[214],E,"適用される手",N,N],[13,"To",E,R[223],90,N],[13,"Put",E,R[224],90,N],[17,"BANMEN_START_POS",E,"左上を(0,0)とした平手初期局面",N,N],[8,R[215],E,"左上からx * 9 + yで表されるインデックスからx,yへの変換",N,N],[10,"square_to_point",E,E,91,[[]]],[8,"Validate",E,"オブジェクトの状態の検証用",N,N],[10,R[104],E,"状態が正しければtrueを、そうでなければfalseを返す",92,[[["self"]],["bool"]]],[11,"new",E,"`LegalMoveTo`を生成",93,[[["bool"],["u32"],[R[43],[R[55]]],[R[55]]],[R[112]]]],[11,"src",E,R[225],93,[[["self"]],["u32"]]],[11,"dst",E,R[226],93,[[["self"]],["u32"]]],[11,R[56],E,"成る手が否か",93,[[["self"]],["bool"]]],[11,"obtained",E,"獲った駒",93,[[["self"]],[[R[55]],[R[43],[R[55]]]]]],[11,"new",E,"`LegalMovePut`を生成",94,[[[R[30]],["u32"]],[R[113]]]],[11,"dst",E,"駒を置く位置のx * 9 + yで表されるインデックス",94,[[["self"]],["u32"]]],[11,"kind",E,R[227],94,[[["self"]],[R[30]]]],[11,"src",E,R[225],95,[[["self"]],["u32"]]],[11,"dst",E,R[226],95,[[["self"]],["u32"]]],[11,R[56],E,"成るか否か",95,[[["self"]],["bool"]]],[11,"dst",E,"駒を置く位置の左上からx * 9 + yで表されるインデックス",96,[[["self"]],["u32"]]],[11,"kind",E,R[227],96,[[["self"]],[R[30]]]],[11,R[57],E,"`AppliedMove`へ変換",89,[[],[R[44]]]],[11,"to_move",E,R[228],89,[[],["move"]]],[11,"to_move",E,R[228],90,[[],["move"]]],[11,"new",E,"`State`の生成",97,[[[R[58]]],["state"]]],[11,"map_banmen",E,"関数を盤面に適用する",97,[[["self"],["f"]],[T]]],[11,"map",E,"関数を盤面と`PartialState`に適用する",97,[[["self"],["f"]],[T]]],[11,"get_banmen",E,"盤面への不変な参照を返す",97,[[["self"]],[R[58]]]],[11,"get_part",E,"`PartialState`への不変な参照を返す",97,[[["self"]],[R[65]]]],[11,"to_full_state",E,"自身に対応する盤面を引数に受け取り`State`へと変換して返す。",86,[[[R[58]],["self"]],["state"]]],[11,"gen_candidate_bits",E,"盤面上の駒を移動する合法手をビットボードに列挙",98,[[[R[60]],["u32"],["teban"],[R[59]]],[R[59]]]],[11,"append_legal_moves_from_banmen",E,"合法手をバッファに追加",98,[[["u32"],["vec"],["i32"],["u128"],["f"],[R[60]],["bool"]]]],[11,"append_win_only_move",E,"王を取る合法手をバッファに追加",98,[[["u32"],["vec"],["i32"],["u128"],[R[60]],["bool"]]]],[11,"legal_moves_once_with_point_and_kind_and_bitboard_and_buffer",E,"一マスだけ駒を動かす合法手を列挙してバッファに追加する",98,[[["u32"],[R[60]],["bool"],["vec"],["u128"],["f"],["teban"],[R[59]]]]],[11,"legal_moves_once_with_point_and_kind_and_bitboard",E,"一マスだけ駒を動かす合法手を列挙して返す",98,[[[R[60]],["u32"],["bool"],["u128"],["f"],["teban"],[R[59]]],[["vec",[R[61]]],[R[61]]]]],[11,"legal_moves_sente_kaku_with_point_and_kind_and_bitboard_and_buffer",E,"先手の角の合法手を列挙してバッファに追加",98,[[["u32"],["vec"],["u128"],["f"],[R[59]],[R[60]]]]],[11,"legal_moves_gote_kaku_with_point_and_kind_and_bitboard_and_buffer",E,"後手の角の合法手を列挙してバッファに追加",98,[[["u32"],["vec"],["u128"],["f"],[R[59]],[R[60]]]]],[11,"legal_moves_sente_hisha_with_point_and_kind_and_bitboard_and_buffer",E,"先手の飛車の合法手を列挙してバッファに追加",98,[[["u32"],["vec"],["u128"],["f"],[R[59]],[R[60]]]]],[11,"legal_moves_gote_hisha_with_point_and_kind_and_bitboard_and_buffer",E,"後手の飛車の合法手を列挙してバッファに追加",98,[[["u32"],["vec"],["u128"],["f"],[R[59]],[R[60]]]]],[11,"legal_moves_sente_kyou_with_point_and_kind_and_bitboard_and_buffer",E,"先手の香車の合法手を列挙してバッファに追加",98,[[["u32"],["vec"],["u128"],["f"],[R[59]]]]],[11,"legal_moves_gote_kyou_with_point_and_kind_and_bitboard_and_buffer",E,"後手の香車の合法手を列挙してバッファに追加",98,[[["u32"],["vec"],["u128"],["f"],[R[59]]]]],[11,"pop_lsb",E,"ビットボードの立っているビットのうち最下位のものの位置を返す",98,[[[R[59]]],["i32"]]],[11,"legal_moves_with_point_and_kind",E,R[231],98,[[[R[60]],["u32"],["teban"],["state"]],[["vec",[R[61]]],[R[61]]]]],[11,"default_moveto_builder",E,"ビットボードから列挙された合法手の情報から`LegalMove`を生成して返す",98,[[["u128"],[R[58]]]]],[11,"legal_moves_with_point_and_kind_and_buffer",E,"盤面上の位置と駒の種別を元に合法手を列挙してバッファに追加する",98,[[[R[60]],["u32"],["vec"],["teban"],["state"]]]],[11,"legal_moves_with_point",E,"盤面上の位置を元に合法手を列挙して返す",98,[[["u32"],["teban"],["state"]],[["vec",[R[61]]],[R[61]]]]],[11,"legal_moves_with_src",E,R[231],98,[[[R[62]],["teban"],["state"]],[["vec",[R[61]]],[R[61]]]]],[11,"legal_moves_with_dst_to",E,R[231],98,[[[R[63]],["teban"],["state"]],[["vec",[R[61]]],[R[61]]]]],[11,"legal_moves_with_dst_put",E,R[231],98,[[[R[64]],["teban"],["state"]],[["vec",[R[61]]],[R[61]]]]],[11,"legal_moves_from_banmen",E,"手番と盤面の状態を元に合法手を生成して返す",98,[[["teban"],["state"]],[["vec",[R[61]]],[R[61]]]]],[11,"legal_moves_from_banmen_with_buffer",E,"手番と盤面の状態を元に合法手を生成してバッファに追加",98,[[["vec"],["teban"],["state"]]]],[11,"legal_moves_from_mochigoma",E,"手番と盤面の状態と持ち駒を元に駒を置く合法手を生成して返す",98,[[[R[41]],["teban"],["state"]],[["vec",[R[61]]],[R[61]]]]],[11,"legal_moves_from_mochigoma_with_buffer",E,"手番と盤面の状態と持ち駒を元に駒を置く合法手を生成してバッファに追加",98,[[["vec"],[R[41]],["teban"],["state"]]]],[11,"legal_moves_all",E,"手番と盤面の状態と持ち駒を元に合法手を生成して返す",98,[[[R[41]],["teban"],["state"]],[["vec",[R[61]]],[R[61]]]]],[11,"win_only_move_once_with_point_and_kind_and_bitboard",E,"王を取る手のうち一マスだけ駒を動かす手を返す",98,[[[R[60]],["u32"],["teban"],[R[59]]],[[R[43],["i32"]],["i32"]]]],[11,"win_only_move_sente_kaku_with_point_and_kind_and_bitboard",E,"先手の角を動かす手で王を取れる手を返す",98,[[["u32"],[R[59]],[R[60]]],[[R[43],["i32"]],["i32"]]]],[11,"win_only_move_gote_kaku_with_point_and_kind_and_bitboard",E,"後手の角を動かす手で王を取れる手を返す",98,[[["u32"],[R[59]],[R[60]]],[[R[43],["i32"]],["i32"]]]],[11,"win_only_move_sente_hisha_with_point_and_kind_and_bitboard",E,"先手の飛車を動かす手で王を取れる手を返す",98,[[["u32"],[R[59]],[R[60]]],[[R[43],["i32"]],["i32"]]]],[11,"win_only_move_gote_hisha_with_point_and_kind_and_bitboard",E,"後手の飛車を動かす手で王を取れる手を返す",98,[[["u32"],[R[59]],[R[60]]],[[R[43],["i32"]],["i32"]]]],[11,"win_only_move_sente_kyou_with_point_and_kind_and_bitboard",E,"先手の香車を動かす手で王を取れる手を返す",98,[[["u32"],[R[59]]],[[R[43],["i32"]],["i32"]]]],[11,"win_only_move_gote_kyou_with_point_and_kind_and_bitboard",E,"後手の香車を動かす手で王を取れる手を返す",98,[[["u32"],[R[59]]],[[R[43],["i32"]],["i32"]]]],[11,"win_only_moves_with_point_and_kind",E,"王を取れる手のうち一マスだけ駒を動かす合法手を列挙して返す",98,[[[R[60]],["u32"],["teban"],["state"]],[["vec",[R[61]]],[R[61]]]]],[11,"win_only_moves_with_point_and_kind_and_buffer",E,"王を取れる手のうち一マスだけ駒を動かす合法手を列挙してバッファに追加する",98,[[[R[60]],["u32"],["vec"],["teban"],["state"]]]],[11,"win_only_moves_with_point",E,R[230],98,[[["u32"],["teban"],["state"]],[["vec",[R[61]]],[R[61]]]]],[11,"win_only_moves_with_src",E,R[230],98,[[[R[62]],["teban"],["state"]],[["vec",[R[61]]],[R[61]]]]],[11,"win_only_moves_with_dst_to",E,R[230],98,[[[R[63]],["teban"],["state"]],[["vec",[R[61]]],[R[61]]]]],[11,"win_only_moves_with_dst_put",E,R[230],98,[[[R[64]],["teban"],["state"]],[["vec",[R[61]]],[R[61]]]]],[11,"win_only_moves",E,"手番と盤面の状態を元に王を取れる合法手のみを生成して返す",98,[[["teban"],["state"]],[["vec",[R[61]]],[R[61]]]]],[11,"oute_only_moves_with_point",E,"盤面上の位置を元に王を取れる手か王手の合法手のみを列挙して返す",98,[[["u32"],[R[41]],["teban"],["state"]],[["vec",[R[61]]],[R[61]]]]],[11,"oute_only_moves_from_banmen",E,"手番と盤面の状態と持ち駒を元に王を取れる手か王手の盤面上の駒を動かす合法手のみを生成して返す",98,[[[R[41]],["teban"],["state"]],[["vec",[R[61]]],[R[61]]]]],[11,"oute_only_moves_from_mochigoma",E,"手番と盤面の状態と持ち駒を元に駒を置く王手の合法手のみを生成して返す",98,[[[R[41]],["teban"],["state"]],[["vec",[R[61]]],[R[61]]]]],[11,"oute_only_moves_all",E,"手番と盤面の状態と持ち駒を元に王を取れる手か王手の合法手のみを生成して返す",98,[[[R[41]],["teban"],["state"]],[["vec",[R[61]]],[R[61]]]]],[11,"respond_oute_only_moves_all",E,"手番と盤面の状態と持ち駒を元に王手に応ずる合法手のみを生成して返す",98,[[[R[41]],["teban"],["state"]],[["vec",[R[61]]],[R[61]]]]],[11,"apply_move_to_partial_state_none_check",E,"盤面の状態を管理するビットボードを手を適用した状態に更新して返す",98,[[[R[44]],[R[41]],["teban"],["state"]],[R[65]]]],[11,"apply_move_none_check",E,"現在の局面に手を適用した結果を返す。合法手か否かのチェックは行わない。",98,[[[R[44]],[R[41]],["teban"],["state"]]]],[11,"apply_move_to_banmen_and_mochigoma_none_check",E,"現在の局面に手を適用した結果を返す。適用対象は盤面と持ち駒のみで`State`は返さない。",98,[[[R[44]],[R[41]],["teban"],[R[58]]]]],[11,"is_valid_move",E,"手が合法かどうかを返す",98,[[[R[44]],[R[41]],["teban"],["state"]],["bool"]]],[11,"apply_valid_move",E,"手が合法かチェック後現在の局面に手を適用して返す。",98,[[[R[44]],[R[41]],["teban"],["state"]],[[R[27],[R[66]]],[R[66]]]]],[11,R[67],E,"現在の局面に手のシーケンスを適用して返す",98,[[["state"],[R[41]],["vec"],["u32"],["u64"],[R[69]],[R[68],["u64","u32"]],["teban"]]]],[11,"apply_moves_with_callback",E,"現在の局面に手のシーケンスを適用しつつコールバックを呼び出して結果を返す",98,[[["state"],[R[41]],["vec"],["f"],["teban"],[T]]]],[11,"is_nyugyoku_win",E,"入玉宣言勝ちが成立しているかどうかを返す",98,[[[R[43]],[R[41]],["teban"],["state"]],["bool"]]],[11,"responded_oute",E,"王手に応じたか否か",98,[[[R[44]],[R[41]],["teban"],["state"]],[[R[27],["bool",R[70]]],[R[70]],["bool"]]]],[11,"is_put_fu_and_mate",E,"手が打ち歩詰めか否かを返す",98,[[[R[44]],[R[41]],["teban"],["state"]],["bool"]]],[11,"is_win",E,"手が王を取る手か否かを返す",98,[[[R[44]],["teban"],["state"]],["bool"]]],[11,"is_mate",E,"相手が詰んでいるか否かを返す",98,[[["teban"],["state"]],["bool"]]],[11,"is_mate_with_partial_state_and_point_and_kind",E,"相手が詰んでいるか否かビットボードと移動元座標と駒の種類から返す",98,[[["u32"],[R[65]],["teban"],[R[60]]],["bool"]]],[11,"is_mate_with_partial_state_and_from_and_kind",E,"相手が詰んでいるか否かビットボードと移動元座標(x*9+y)と駒の種類から返す",98,[[["u32"],[R[65]],["teban"],[R[60]]],["bool"]]],[11,"is_mate_with_partial_state_repeat_move_kinds",E,"相手が詰んでいるか否かビットボードから返す(香車、飛車、角のいずれかで詰むケースのみ)",98,[[["teban"],[R[65]]],["bool"]]],[11,"is_mate_with_partial_state_and_old_banmen_and_opponent_move",E,"相手の手番側が詰んでいるか否か手の適用後のビットボードと手の適用前の盤面と手番側の打った手から返す",98,[[[R[44]],[R[65]],["teban"],[R[58]]],["bool"]]],[11,"update_sennichite_map",E,"千日手検出用マップの更新関数",98,[[["state"],[R[68]],["u64"],["teban"]]]],[11,"is_sennichite",E,"現在の局面が千日手か否かを返す",98,[[["state"],[R[68]],["u64"],["teban"]],["bool"]]],[11,"update_sennichite_by_oute_map",E,"連続王手の千日手検出用マップの更新関数",98,[[["state"],[R[68]],["u64"],["teban"]]]],[11,"is_sennichite_by_oute",E,"現在の局面が連続王手の千日手か否かを返す",98,[[["state"],[R[68]],["u64"],["teban"]],["bool"]]],[11,"update_time_limit",E,"現在の持ち時間を更新して返す(フィッシャークロックルール対応) # Arguments * `limit` -…",98,[[[R[50]],["teban"],[R[32]]],[R[32]]]],[11,"filled_mochigoma_hashmap",E,"持ち駒の状態を平手初期局面の時の駒を全部持ち駒にした状態で返す。",98,[[],[[R[30]],["u32"],[R[45],[R[30],"u32"]]]]],[8,"TryFrom",R[14],"値の変換を試みる",N,N],[10,R[75],E,E,99,[[[T]],[R[27]]]],[8,"MaxIndex",E,"enumの各項目にインデックスが対応する型の最大のインデックスを取得する",N,N],[10,R[106],E,E,100,[[],["usize"]]],[8,"Find",E,"`query`で表されるものを検索する",N,N],[10,"find",E,E,101,[[["self"],["q"]],[R[43]]]],[11,"new",E,"`OnErrorHanderl`の生成",102,[[["mutex"],["arc",["mutex"]]],[R[33]]]],[11,"call",E,"エラーを出力する",102,[[["self"],["e"]],["bool"]]],[11,"immediate",E,"その場で処理を実行してエラー発生時`OnErrorHandler`を用いて出力する",103,[[["mutex",[R[33]]],["f"],["arc",["mutex"]]],[R[27]]]],[11,"new",E,"`OnAcceptMove`の生成",0,[[[R[31]]],["onacceptmove"]]],[11,"notify",E,"覚えておいた手を通知する",0,[[["arc"],["self"],["arc"]]]],[11,"new",E,"`UsiAgent`の生成",104,[[[T]],[R[14]]]],[11,R[71],E,R[264],104,[[["self"],["f"]],[[R[27],[R[73]]],[R[73],[R[72]]]]]],[11,R[74],E,R[265],104,[[[R[28]],["self"],["f"]],[[R[27],[R[73]]],[R[73],[R[72]]]]]],[11,"start",E,"`Logger`,`USIInputReader`,`USIOutputWriter`を指定して開始",104,[[["w"],["l"],["f"],["self"],["r"]],[[R[27],[R[73]]],[R[73],[R[72]]]]]],[11,"into",E,E,102,[[],[U]]],[11,"from",E,E,102,[[[T]],[T]]],[11,R[75],E,E,102,[[[U]],[R[27]]]],[11,R[76],E,E,102,[[],[R[27]]]],[11,R[80],E,E,102,[[["self"]],[T]]],[11,R[77],E,E,102,[[["self"]],[T]]],[11,R[78],E,E,102,[[["self"]],[R[81]]]],[11,"into",E,E,103,[[],[U]]],[11,"from",E,E,103,[[[T]],[T]]],[11,R[75],E,E,103,[[[U]],[R[27]]]],[11,R[76],E,E,103,[[],[R[27]]]],[11,R[80],E,E,103,[[["self"]],[T]]],[11,R[77],E,E,103,[[["self"]],[T]]],[11,R[78],E,E,103,[[["self"]],[R[81]]]],[11,"into",E,E,104,[[],[U]]],[11,"from",E,E,104,[[[T]],[T]]],[11,R[75],E,E,104,[[[U]],[R[27]]]],[11,R[76],E,E,104,[[],[R[27]]]],[11,R[80],E,E,104,[[["self"]],[T]]],[11,R[77],E,E,104,[[["self"]],[T]]],[11,R[78],E,E,104,[[["self"]],[R[81]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[75],E,E,0,[[[U]],[R[27]]]],[11,R[76],E,E,0,[[],[R[27]]]],[11,R[80],E,E,0,[[["self"]],[T]]],[11,R[77],E,E,0,[[["self"]],[T]]],[11,R[78],E,E,0,[[["self"]],[R[81]]]],[11,"into",R[79],E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[75],E,E,21,[[[U]],[R[27]]]],[11,R[76],E,E,21,[[],[R[27]]]],[11,R[80],E,E,21,[[["self"]],[T]]],[11,R[77],E,E,21,[[["self"]],[T]]],[11,R[78],E,E,21,[[["self"]],[R[81]]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[75],E,E,22,[[[U]],[R[27]]]],[11,R[76],E,E,22,[[],[R[27]]]],[11,R[80],E,E,22,[[["self"]],[T]]],[11,R[77],E,E,22,[[["self"]],[T]]],[11,R[78],E,E,22,[[["self"]],[R[81]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[75],E,E,1,[[[U]],[R[27]]]],[11,R[76],E,E,1,[[],[R[27]]]],[11,R[80],E,E,1,[[["self"]],[T]]],[11,R[77],E,E,1,[[["self"]],[T]]],[11,R[78],E,E,1,[[["self"]],[R[81]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[82],E,E,2,[[["self"]],[T]]],[11,R[83],E,E,2,[[["self"],[T]]]],[11,R[75],E,E,2,[[[U]],[R[27]]]],[11,R[76],E,E,2,[[],[R[27]]]],[11,R[80],E,E,2,[[["self"]],[T]]],[11,R[77],E,E,2,[[["self"]],[T]]],[11,R[78],E,E,2,[[["self"]],[R[81]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[82],E,E,3,[[["self"]],[T]]],[11,R[83],E,E,3,[[["self"],[T]]]],[11,R[75],E,E,3,[[[U]],[R[27]]]],[11,R[76],E,E,3,[[],[R[27]]]],[11,R[80],E,E,3,[[["self"]],[T]]],[11,R[77],E,E,3,[[["self"]],[T]]],[11,R[78],E,E,3,[[["self"]],[R[81]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[75],E,E,4,[[[U]],[R[27]]]],[11,R[76],E,E,4,[[],[R[27]]]],[11,R[80],E,E,4,[[["self"]],[T]]],[11,R[77],E,E,4,[[["self"]],[T]]],[11,R[78],E,E,4,[[["self"]],[R[81]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[75],E,E,5,[[[U]],[R[27]]]],[11,R[76],E,E,5,[[],[R[27]]]],[11,R[80],E,E,5,[[["self"]],[T]]],[11,R[77],E,E,5,[[["self"]],[T]]],[11,R[78],E,E,5,[[["self"]],[R[81]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[82],E,E,6,[[["self"]],[T]]],[11,R[83],E,E,6,[[["self"],[T]]]],[11,R[75],E,E,6,[[[U]],[R[27]]]],[11,R[76],E,E,6,[[],[R[27]]]],[11,R[80],E,E,6,[[["self"]],[T]]],[11,R[77],E,E,6,[[["self"]],[T]]],[11,R[78],E,E,6,[[["self"]],[R[81]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[82],E,E,7,[[["self"]],[T]]],[11,R[83],E,E,7,[[["self"],[T]]]],[11,R[75],E,E,7,[[[U]],[R[27]]]],[11,R[76],E,E,7,[[],[R[27]]]],[11,R[80],E,E,7,[[["self"]],[T]]],[11,R[77],E,E,7,[[["self"]],[T]]],[11,R[78],E,E,7,[[["self"]],[R[81]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[82],E,E,8,[[["self"]],[T]]],[11,R[83],E,E,8,[[["self"],[T]]]],[11,R[75],E,E,8,[[[U]],[R[27]]]],[11,R[76],E,E,8,[[],[R[27]]]],[11,R[80],E,E,8,[[["self"]],[T]]],[11,R[77],E,E,8,[[["self"]],[T]]],[11,R[78],E,E,8,[[["self"]],[R[81]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[82],E,E,9,[[["self"]],[T]]],[11,R[83],E,E,9,[[["self"],[T]]]],[11,R[75],E,E,9,[[[U]],[R[27]]]],[11,R[76],E,E,9,[[],[R[27]]]],[11,R[80],E,E,9,[[["self"]],[T]]],[11,R[77],E,E,9,[[["self"]],[T]]],[11,R[78],E,E,9,[[["self"]],[R[81]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[75],E,E,10,[[[U]],[R[27]]]],[11,R[76],E,E,10,[[],[R[27]]]],[11,R[80],E,E,10,[[["self"]],[T]]],[11,R[77],E,E,10,[[["self"]],[T]]],[11,R[78],E,E,10,[[["self"]],[R[81]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[82],E,E,11,[[["self"]],[T]]],[11,R[83],E,E,11,[[["self"],[T]]]],[11,R[75],E,E,11,[[[U]],[R[27]]]],[11,R[76],E,E,11,[[],[R[27]]]],[11,R[80],E,E,11,[[["self"]],[T]]],[11,R[77],E,E,11,[[["self"]],[T]]],[11,R[78],E,E,11,[[["self"]],[R[81]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[75],E,E,12,[[[U]],[R[27]]]],[11,R[76],E,E,12,[[],[R[27]]]],[11,R[80],E,E,12,[[["self"]],[T]]],[11,R[77],E,E,12,[[["self"]],[T]]],[11,R[78],E,E,12,[[["self"]],[R[81]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[82],E,E,13,[[["self"]],[T]]],[11,R[83],E,E,13,[[["self"],[T]]]],[11,R[84],E,E,13,[[["self"]],[R[28]]]],[11,R[75],E,E,13,[[[U]],[R[27]]]],[11,R[76],E,E,13,[[],[R[27]]]],[11,R[80],E,E,13,[[["self"]],[T]]],[11,R[77],E,E,13,[[["self"]],[T]]],[11,R[78],E,E,13,[[["self"]],[R[81]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[82],E,E,14,[[["self"]],[T]]],[11,R[83],E,E,14,[[["self"],[T]]]],[11,R[84],E,E,14,[[["self"]],[R[28]]]],[11,R[75],E,E,14,[[[U]],[R[27]]]],[11,R[76],E,E,14,[[],[R[27]]]],[11,R[80],E,E,14,[[["self"]],[T]]],[11,R[77],E,E,14,[[["self"]],[T]]],[11,R[78],E,E,14,[[["self"]],[R[81]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[82],E,E,15,[[["self"]],[T]]],[11,R[83],E,E,15,[[["self"],[T]]]],[11,R[75],E,E,15,[[[U]],[R[27]]]],[11,R[76],E,E,15,[[],[R[27]]]],[11,R[80],E,E,15,[[["self"]],[T]]],[11,R[77],E,E,15,[[["self"]],[T]]],[11,R[78],E,E,15,[[["self"]],[R[81]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[82],E,E,16,[[["self"]],[T]]],[11,R[83],E,E,16,[[["self"],[T]]]],[11,R[75],E,E,16,[[[U]],[R[27]]]],[11,R[76],E,E,16,[[],[R[27]]]],[11,R[80],E,E,16,[[["self"]],[T]]],[11,R[77],E,E,16,[[["self"]],[T]]],[11,R[78],E,E,16,[[["self"]],[R[81]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[82],E,E,17,[[["self"]],[T]]],[11,R[83],E,E,17,[[["self"],[T]]]],[11,R[75],E,E,17,[[[U]],[R[27]]]],[11,R[76],E,E,17,[[],[R[27]]]],[11,R[80],E,E,17,[[["self"]],[T]]],[11,R[77],E,E,17,[[["self"]],[T]]],[11,R[78],E,E,17,[[["self"]],[R[81]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[75],E,E,18,[[[U]],[R[27]]]],[11,R[76],E,E,18,[[],[R[27]]]],[11,R[80],E,E,18,[[["self"]],[T]]],[11,R[77],E,E,18,[[["self"]],[T]]],[11,R[78],E,E,18,[[["self"]],[R[81]]]],[11,"into",R[85],E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[84],E,E,23,[[["self"]],[R[28]]]],[11,R[75],E,E,23,[[[U]],[R[27]]]],[11,R[76],E,E,23,[[],[R[27]]]],[11,R[80],E,E,23,[[["self"]],[T]]],[11,R[77],E,E,23,[[["self"]],[T]]],[11,R[78],E,E,23,[[["self"]],[R[81]]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[84],E,E,24,[[["self"]],[R[28]]]],[11,R[75],E,E,24,[[[U]],[R[27]]]],[11,R[76],E,E,24,[[],[R[27]]]],[11,R[80],E,E,24,[[["self"]],[T]]],[11,R[77],E,E,24,[[["self"]],[T]]],[11,R[78],E,E,24,[[["self"]],[R[81]]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[84],E,E,25,[[["self"]],[R[28]]]],[11,R[75],E,E,25,[[[U]],[R[27]]]],[11,R[76],E,E,25,[[],[R[27]]]],[11,R[80],E,E,25,[[["self"]],[T]]],[11,R[77],E,E,25,[[["self"]],[T]]],[11,R[78],E,E,25,[[["self"]],[R[81]]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[84],E,E,26,[[["self"]],[R[28]]]],[11,R[75],E,E,26,[[[U]],[R[27]]]],[11,R[76],E,E,26,[[],[R[27]]]],[11,R[80],E,E,26,[[["self"]],[T]]],[11,R[77],E,E,26,[[["self"]],[T]]],[11,R[78],E,E,26,[[["self"]],[R[81]]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[84],E,E,27,[[["self"]],[R[28]]]],[11,R[75],E,E,27,[[[U]],[R[27]]]],[11,R[76],E,E,27,[[],[R[27]]]],[11,R[80],E,E,27,[[["self"]],[T]]],[11,R[77],E,E,27,[[["self"]],[T]]],[11,R[78],E,E,27,[[["self"]],[R[81]]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[84],E,E,28,[[["self"]],[R[28]]]],[11,R[75],E,E,28,[[[U]],[R[27]]]],[11,R[76],E,E,28,[[],[R[27]]]],[11,R[80],E,E,28,[[["self"]],[T]]],[11,R[77],E,E,28,[[["self"]],[T]]],[11,R[78],E,E,28,[[["self"]],[R[81]]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[84],E,E,29,[[["self"]],[R[28]]]],[11,R[75],E,E,29,[[[U]],[R[27]]]],[11,R[76],E,E,29,[[],[R[27]]]],[11,R[80],E,E,29,[[["self"]],[T]]],[11,R[77],E,E,29,[[["self"]],[T]]],[11,R[78],E,E,29,[[["self"]],[R[81]]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[84],E,E,30,[[["self"]],[R[28]]]],[11,R[75],E,E,30,[[[U]],[R[27]]]],[11,R[76],E,E,30,[[],[R[27]]]],[11,R[80],E,E,30,[[["self"]],[T]]],[11,R[77],E,E,30,[[["self"]],[T]]],[11,R[78],E,E,30,[[["self"]],[R[81]]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[84],E,E,31,[[["self"]],[R[28]]]],[11,R[75],E,E,31,[[[U]],[R[27]]]],[11,R[76],E,E,31,[[],[R[27]]]],[11,R[80],E,E,31,[[["self"]],[T]]],[11,R[77],E,E,31,[[["self"]],[T]]],[11,R[78],E,E,31,[[["self"]],[R[81]]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[84],E,E,32,[[["self"]],[R[28]]]],[11,R[75],E,E,32,[[[U]],[R[27]]]],[11,R[76],E,E,32,[[],[R[27]]]],[11,R[80],E,E,32,[[["self"]],[T]]],[11,R[77],E,E,32,[[["self"]],[T]]],[11,R[78],E,E,32,[[["self"]],[R[81]]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[84],E,E,33,[[["self"]],[R[28]]]],[11,R[75],E,E,33,[[[U]],[R[27]]]],[11,R[76],E,E,33,[[],[R[27]]]],[11,R[80],E,E,33,[[["self"]],[T]]],[11,R[77],E,E,33,[[["self"]],[T]]],[11,R[78],E,E,33,[[["self"]],[R[81]]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[84],E,E,34,[[["self"]],[R[28]]]],[11,R[75],E,E,34,[[[U]],[R[27]]]],[11,R[76],E,E,34,[[],[R[27]]]],[11,R[80],E,E,34,[[["self"]],[T]]],[11,R[77],E,E,34,[[["self"]],[T]]],[11,R[78],E,E,34,[[["self"]],[R[81]]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,"from",E,E,35,[[],[T]]],[11,R[84],E,E,35,[[["self"]],[R[28]]]],[11,R[75],E,E,35,[[[U]],[R[27]]]],[11,R[76],E,E,35,[[],[R[27]]]],[11,R[80],E,E,35,[[["self"]],[T]]],[11,R[77],E,E,35,[[["self"]],[T]]],[11,R[78],E,E,35,[[["self"]],[R[81]]]],[11,"into",E,E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[84],E,E,36,[[["self"]],[R[28]]]],[11,R[75],E,E,36,[[[U]],[R[27]]]],[11,R[76],E,E,36,[[],[R[27]]]],[11,R[80],E,E,36,[[["self"]],[T]]],[11,R[77],E,E,36,[[["self"]],[T]]],[11,R[78],E,E,36,[[["self"]],[R[81]]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[84],E,E,37,[[["self"]],[R[28]]]],[11,R[75],E,E,37,[[[U]],[R[27]]]],[11,R[76],E,E,37,[[],[R[27]]]],[11,R[80],E,E,37,[[["self"]],[T]]],[11,R[77],E,E,37,[[["self"]],[T]]],[11,R[78],E,E,37,[[["self"]],[R[81]]]],[11,"into",R[86],E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[75],E,E,38,[[[U]],[R[27]]]],[11,R[76],E,E,38,[[],[R[27]]]],[11,R[80],E,E,38,[[["self"]],[T]]],[11,R[77],E,E,38,[[["self"]],[T]]],[11,R[78],E,E,38,[[["self"]],[R[81]]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[82],E,E,39,[[["self"]],[T]]],[11,R[83],E,E,39,[[["self"],[T]]]],[11,R[75],E,E,39,[[[U]],[R[27]]]],[11,R[76],E,E,39,[[],[R[27]]]],[11,R[80],E,E,39,[[["self"]],[T]]],[11,R[77],E,E,39,[[["self"]],[T]]],[11,R[78],E,E,39,[[["self"]],[R[81]]]],[11,"into",E,E,40,[[],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[82],E,E,40,[[["self"]],[T]]],[11,R[83],E,E,40,[[["self"],[T]]]],[11,R[75],E,E,40,[[[U]],[R[27]]]],[11,R[76],E,E,40,[[],[R[27]]]],[11,R[80],E,E,40,[[["self"]],[T]]],[11,R[77],E,E,40,[[["self"]],[T]]],[11,R[78],E,E,40,[[["self"]],[R[81]]]],[11,"into",E,E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[82],E,E,41,[[["self"]],[T]]],[11,R[83],E,E,41,[[["self"],[T]]]],[11,R[75],E,E,41,[[[U]],[R[27]]]],[11,R[76],E,E,41,[[],[R[27]]]],[11,R[80],E,E,41,[[["self"]],[T]]],[11,R[77],E,E,41,[[["self"]],[T]]],[11,R[78],E,E,41,[[["self"]],[R[81]]]],[11,"into",E,E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[82],E,E,42,[[["self"]],[T]]],[11,R[83],E,E,42,[[["self"],[T]]]],[11,R[75],E,E,42,[[[U]],[R[27]]]],[11,R[76],E,E,42,[[],[R[27]]]],[11,R[80],E,E,42,[[["self"]],[T]]],[11,R[77],E,E,42,[[["self"]],[T]]],[11,R[78],E,E,42,[[["self"]],[R[81]]]],[11,"into",E,E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[82],E,E,43,[[["self"]],[T]]],[11,R[83],E,E,43,[[["self"],[T]]]],[11,R[75],E,E,43,[[[U]],[R[27]]]],[11,R[76],E,E,43,[[],[R[27]]]],[11,R[80],E,E,43,[[["self"]],[T]]],[11,R[77],E,E,43,[[["self"]],[T]]],[11,R[78],E,E,43,[[["self"]],[R[81]]]],[11,"into",E,E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[75],E,E,44,[[[U]],[R[27]]]],[11,R[76],E,E,44,[[],[R[27]]]],[11,R[80],E,E,44,[[["self"]],[T]]],[11,R[77],E,E,44,[[["self"]],[T]]],[11,R[78],E,E,44,[[["self"]],[R[81]]]],[11,"into",E,E,45,[[],[U]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[82],E,E,45,[[["self"]],[T]]],[11,R[83],E,E,45,[[["self"],[T]]]],[11,R[75],E,E,45,[[[U]],[R[27]]]],[11,R[76],E,E,45,[[],[R[27]]]],[11,R[80],E,E,45,[[["self"]],[T]]],[11,R[77],E,E,45,[[["self"]],[T]]],[11,R[78],E,E,45,[[["self"]],[R[81]]]],[11,"into",R[87],E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[75],E,E,47,[[[U]],[R[27]]]],[11,R[76],E,E,47,[[],[R[27]]]],[11,R[80],E,E,47,[[["self"]],[T]]],[11,R[77],E,E,47,[[["self"]],[T]]],[11,R[78],E,E,47,[[["self"]],[R[81]]]],[11,"into",R[88],E,50,[[],[U]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[75],E,E,50,[[[U]],[R[27]]]],[11,R[76],E,E,50,[[],[R[27]]]],[11,R[80],E,E,50,[[["self"]],[T]]],[11,R[77],E,E,50,[[["self"]],[T]]],[11,R[78],E,E,50,[[["self"]],[R[81]]]],[11,"into",E,E,51,[[],[U]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[75],E,E,51,[[[U]],[R[27]]]],[11,R[76],E,E,51,[[],[R[27]]]],[11,R[80],E,E,51,[[["self"]],[T]]],[11,R[77],E,E,51,[[["self"]],[T]]],[11,R[78],E,E,51,[[["self"]],[R[81]]]],[11,"into",R[89],E,53,[[],[U]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[75],E,E,53,[[[U]],[R[27]]]],[11,R[76],E,E,53,[[],[R[27]]]],[11,R[80],E,E,53,[[["self"]],[T]]],[11,R[77],E,E,53,[[["self"]],[T]]],[11,R[78],E,E,53,[[["self"]],[R[81]]]],[11,"into",R[90],E,57,[[],[U]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[82],E,E,57,[[["self"]],[T]]],[11,R[83],E,E,57,[[["self"],[T]]]],[11,R[75],E,E,57,[[[U]],[R[27]]]],[11,R[76],E,E,57,[[],[R[27]]]],[11,R[80],E,E,57,[[["self"]],[T]]],[11,R[77],E,E,57,[[["self"]],[T]]],[11,R[78],E,E,57,[[["self"]],[R[81]]]],[11,"into",E,E,58,[[],[U]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[82],E,E,58,[[["self"]],[T]]],[11,R[83],E,E,58,[[["self"],[T]]]],[11,R[75],E,E,58,[[[U]],[R[27]]]],[11,R[76],E,E,58,[[],[R[27]]]],[11,R[80],E,E,58,[[["self"]],[T]]],[11,R[77],E,E,58,[[["self"]],[T]]],[11,R[78],E,E,58,[[["self"]],[R[81]]]],[11,"into",E,E,54,[[],[U]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[82],E,E,54,[[["self"]],[T]]],[11,R[83],E,E,54,[[["self"],[T]]]],[11,R[75],E,E,54,[[[U]],[R[27]]]],[11,R[76],E,E,54,[[],[R[27]]]],[11,R[80],E,E,54,[[["self"]],[T]]],[11,R[77],E,E,54,[[["self"]],[T]]],[11,R[78],E,E,54,[[["self"]],[R[81]]]],[11,"into",R[91],E,59,[[],[U]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[82],E,E,59,[[["self"]],[T]]],[11,R[83],E,E,59,[[["self"],[T]]]],[11,R[75],E,E,59,[[[U]],[R[27]]]],[11,R[76],E,E,59,[[],[R[27]]]],[11,R[80],E,E,59,[[["self"]],[T]]],[11,R[77],E,E,59,[[["self"]],[T]]],[11,R[78],E,E,59,[[["self"]],[R[81]]]],[11,"into",E,E,60,[[],[U]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[82],E,E,60,[[["self"]],[T]]],[11,R[83],E,E,60,[[["self"],[T]]]],[11,R[75],E,E,60,[[[U]],[R[27]]]],[11,R[76],E,E,60,[[],[R[27]]]],[11,R[80],E,E,60,[[["self"]],[T]]],[11,R[77],E,E,60,[[["self"]],[T]]],[11,R[78],E,E,60,[[["self"]],[R[81]]]],[11,"into",E,E,61,[[],[U]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[82],E,E,61,[[["self"]],[T]]],[11,R[83],E,E,61,[[["self"],[T]]]],[11,R[75],E,E,61,[[[U]],[R[27]]]],[11,R[76],E,E,61,[[],[R[27]]]],[11,R[80],E,E,61,[[["self"]],[T]]],[11,R[77],E,E,61,[[["self"]],[T]]],[11,R[78],E,E,61,[[["self"]],[R[81]]]],[11,"into",E,E,62,[[],[U]]],[11,"from",E,E,62,[[[T]],[T]]],[11,R[82],E,E,62,[[["self"]],[T]]],[11,R[83],E,E,62,[[["self"],[T]]]],[11,R[75],E,E,62,[[[U]],[R[27]]]],[11,R[76],E,E,62,[[],[R[27]]]],[11,R[80],E,E,62,[[["self"]],[T]]],[11,R[77],E,E,62,[[["self"]],[T]]],[11,R[78],E,E,62,[[["self"]],[R[81]]]],[11,"into",E,E,63,[[],[U]]],[11,"from",E,E,63,[[[T]],[T]]],[11,R[82],E,E,63,[[["self"]],[T]]],[11,R[83],E,E,63,[[["self"],[T]]]],[11,R[75],E,E,63,[[[U]],[R[27]]]],[11,R[76],E,E,63,[[],[R[27]]]],[11,R[80],E,E,63,[[["self"]],[T]]],[11,R[77],E,E,63,[[["self"]],[T]]],[11,R[78],E,E,63,[[["self"]],[R[81]]]],[11,"into",E,E,64,[[],[U]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[82],E,E,64,[[["self"]],[T]]],[11,R[83],E,E,64,[[["self"],[T]]]],[11,R[75],E,E,64,[[[U]],[R[27]]]],[11,R[76],E,E,64,[[],[R[27]]]],[11,R[80],E,E,64,[[["self"]],[T]]],[11,R[77],E,E,64,[[["self"]],[T]]],[11,R[78],E,E,64,[[["self"]],[R[81]]]],[11,"into",E,E,65,[[],[U]]],[11,"from",E,E,65,[[[T]],[T]]],[11,R[82],E,E,65,[[["self"]],[T]]],[11,R[83],E,E,65,[[["self"],[T]]]],[11,R[75],E,E,65,[[[U]],[R[27]]]],[11,R[76],E,E,65,[[],[R[27]]]],[11,R[80],E,E,65,[[["self"]],[T]]],[11,R[77],E,E,65,[[["self"]],[T]]],[11,R[78],E,E,65,[[["self"]],[R[81]]]],[11,"into",E,E,66,[[],[U]]],[11,"from",E,E,66,[[[T]],[T]]],[11,R[82],E,E,66,[[["self"]],[T]]],[11,R[83],E,E,66,[[["self"],[T]]]],[11,R[75],E,E,66,[[[U]],[R[27]]]],[11,R[76],E,E,66,[[],[R[27]]]],[11,R[80],E,E,66,[[["self"]],[T]]],[11,R[77],E,E,66,[[["self"]],[T]]],[11,R[78],E,E,66,[[["self"]],[R[81]]]],[11,"into",E,E,67,[[],[U]]],[11,"from",E,E,67,[[[T]],[T]]],[11,R[82],E,E,67,[[["self"]],[T]]],[11,R[83],E,E,67,[[["self"],[T]]]],[11,R[75],E,E,67,[[[U]],[R[27]]]],[11,R[76],E,E,67,[[],[R[27]]]],[11,R[80],E,E,67,[[["self"]],[T]]],[11,R[77],E,E,67,[[["self"]],[T]]],[11,R[78],E,E,67,[[["self"]],[R[81]]]],[11,"into",E,E,68,[[],[U]]],[11,"from",E,E,68,[[[T]],[T]]],[11,R[82],E,E,68,[[["self"]],[T]]],[11,R[83],E,E,68,[[["self"],[T]]]],[11,R[75],E,E,68,[[[U]],[R[27]]]],[11,R[76],E,E,68,[[],[R[27]]]],[11,R[80],E,E,68,[[["self"]],[T]]],[11,R[77],E,E,68,[[["self"]],[T]]],[11,R[78],E,E,68,[[["self"]],[R[81]]]],[11,"into",E,E,69,[[],[U]]],[11,"from",E,E,69,[[[T]],[T]]],[11,R[82],E,E,69,[[["self"]],[T]]],[11,R[83],E,E,69,[[["self"],[T]]]],[11,R[75],E,E,69,[[[U]],[R[27]]]],[11,R[76],E,E,69,[[],[R[27]]]],[11,R[80],E,E,69,[[["self"]],[T]]],[11,R[77],E,E,69,[[["self"]],[T]]],[11,R[78],E,E,69,[[["self"]],[R[81]]]],[11,"into",R[92],E,70,[[],[U]]],[11,"from",E,E,70,[[[T]],[T]]],[11,R[75],E,E,70,[[[U]],[R[27]]]],[11,R[76],E,E,70,[[],[R[27]]]],[11,R[80],E,E,70,[[["self"]],[T]]],[11,R[77],E,E,70,[[["self"]],[T]]],[11,R[78],E,E,70,[[["self"]],[R[81]]]],[11,"into",R[93],E,72,[[],[U]]],[11,"from",E,E,72,[[[T]],[T]]],[11,R[82],E,E,72,[[["self"]],[T]]],[11,R[83],E,E,72,[[["self"],[T]]]],[11,R[75],E,E,72,[[[U]],[R[27]]]],[11,R[76],E,E,72,[[],[R[27]]]],[11,R[80],E,E,72,[[["self"]],[T]]],[11,R[77],E,E,72,[[["self"]],[T]]],[11,R[78],E,E,72,[[["self"]],[R[81]]]],[11,"into",E,E,73,[[],[U]]],[11,"from",E,E,73,[[[T]],[T]]],[11,R[82],E,E,73,[[["self"]],[T]]],[11,R[83],E,E,73,[[["self"],[T]]]],[11,R[75],E,E,73,[[[U]],[R[27]]]],[11,R[76],E,E,73,[[],[R[27]]]],[11,R[80],E,E,73,[[["self"]],[T]]],[11,R[77],E,E,73,[[["self"]],[T]]],[11,R[78],E,E,73,[[["self"]],[R[81]]]],[11,"into",E,E,74,[[],[U]]],[11,"from",E,E,74,[[[T]],[T]]],[11,R[75],E,E,74,[[[U]],[R[27]]]],[11,R[76],E,E,74,[[],[R[27]]]],[11,R[80],E,E,74,[[["self"]],[T]]],[11,R[77],E,E,74,[[["self"]],[T]]],[11,R[78],E,E,74,[[["self"]],[R[81]]]],[11,"into",R[94],E,79,[[],[U]]],[11,"from",E,E,79,[[[T]],[T]]],[11,R[75],E,E,79,[[[U]],[R[27]]]],[11,R[76],E,E,79,[[],[R[27]]]],[11,R[80],E,E,79,[[["self"]],[T]]],[11,R[77],E,E,79,[[["self"]],[T]]],[11,R[78],E,E,79,[[["self"]],[R[81]]]],[11,"into",E,E,75,[[],[U]]],[11,"from",E,E,75,[[[T]],[T]]],[11,R[75],E,E,75,[[[U]],[R[27]]]],[11,R[76],E,E,75,[[],[R[27]]]],[11,R[80],E,E,75,[[["self"]],[T]]],[11,R[77],E,E,75,[[["self"]],[T]]],[11,R[78],E,E,75,[[["self"]],[R[81]]]],[11,"into",E,E,76,[[],[U]]],[11,"from",E,E,76,[[[T]],[T]]],[11,R[75],E,E,76,[[[U]],[R[27]]]],[11,R[76],E,E,76,[[],[R[27]]]],[11,R[80],E,E,76,[[["self"]],[T]]],[11,R[77],E,E,76,[[["self"]],[T]]],[11,R[78],E,E,76,[[["self"]],[R[81]]]],[11,"into",E,E,77,[[],[U]]],[11,"from",E,E,77,[[[T]],[T]]],[11,R[75],E,E,77,[[[U]],[R[27]]]],[11,R[76],E,E,77,[[],[R[27]]]],[11,R[80],E,E,77,[[["self"]],[T]]],[11,R[77],E,E,77,[[["self"]],[T]]],[11,R[78],E,E,77,[[["self"]],[R[81]]]],[11,"into",R[95],E,80,[[],[U]]],[11,"from",E,E,80,[[[T]],[T]]],[11,R[75],E,E,80,[[[U]],[R[27]]]],[11,R[76],E,E,80,[[],[R[27]]]],[11,R[80],E,E,80,[[["self"]],[T]]],[11,R[77],E,E,80,[[["self"]],[T]]],[11,R[78],E,E,80,[[["self"]],[R[81]]]],[11,"into",E,E,84,[[],[U]]],[11,"from",E,E,84,[[[T]],[T]]],[11,R[75],E,E,84,[[[U]],[R[27]]]],[11,R[76],E,E,84,[[],[R[27]]]],[11,R[80],E,E,84,[[["self"]],[T]]],[11,R[77],E,E,84,[[["self"]],[T]]],[11,R[78],E,E,84,[[["self"]],[R[81]]]],[11,"into",E,E,85,[[],[U]]],[11,"from",E,E,85,[[[T]],[T]]],[11,R[75],E,E,85,[[[U]],[R[27]]]],[11,R[76],E,E,85,[[],[R[27]]]],[11,R[80],E,E,85,[[["self"]],[T]]],[11,R[77],E,E,85,[[["self"]],[T]]],[11,R[78],E,E,85,[[["self"]],[R[81]]]],[11,"into",E,E,81,[[],[U]]],[11,"from",E,E,81,[[[T]],[T]]],[11,R[75],E,E,81,[[[U]],[R[27]]]],[11,R[76],E,E,81,[[],[R[27]]]],[11,R[80],E,E,81,[[["self"]],[T]]],[11,R[77],E,E,81,[[["self"]],[T]]],[11,R[78],E,E,81,[[["self"]],[R[81]]]],[11,"into",R[96],E,93,[[],[U]]],[11,"from",E,E,93,[[[T]],[T]]],[11,R[82],E,E,93,[[["self"]],[T]]],[11,R[83],E,E,93,[[["self"],[T]]]],[11,R[75],E,E,93,[[[U]],[R[27]]]],[11,R[76],E,E,93,[[],[R[27]]]],[11,R[80],E,E,93,[[["self"]],[T]]],[11,R[77],E,E,93,[[["self"]],[T]]],[11,R[78],E,E,93,[[["self"]],[R[81]]]],[11,"into",E,E,94,[[],[U]]],[11,"from",E,E,94,[[[T]],[T]]],[11,R[82],E,E,94,[[["self"]],[T]]],[11,R[83],E,E,94,[[["self"],[T]]]],[11,R[75],E,E,94,[[[U]],[R[27]]]],[11,R[76],E,E,94,[[],[R[27]]]],[11,R[80],E,E,94,[[["self"]],[T]]],[11,R[77],E,E,94,[[["self"]],[T]]],[11,R[78],E,E,94,[[["self"]],[R[81]]]],[11,"into",E,E,95,[[],[U]]],[11,"from",E,E,95,[[[T]],[T]]],[11,R[82],E,E,95,[[["self"]],[T]]],[11,R[83],E,E,95,[[["self"],[T]]]],[11,R[75],E,E,95,[[[U]],[R[27]]]],[11,R[76],E,E,95,[[],[R[27]]]],[11,R[80],E,E,95,[[["self"]],[T]]],[11,R[77],E,E,95,[[["self"]],[T]]],[11,R[78],E,E,95,[[["self"]],[R[81]]]],[11,"into",E,E,96,[[],[U]]],[11,"from",E,E,96,[[[T]],[T]]],[11,R[82],E,E,96,[[["self"]],[T]]],[11,R[83],E,E,96,[[["self"],[T]]]],[11,R[75],E,E,96,[[[U]],[R[27]]]],[11,R[76],E,E,96,[[],[R[27]]]],[11,R[80],E,E,96,[[["self"]],[T]]],[11,R[77],E,E,96,[[["self"]],[T]]],[11,R[78],E,E,96,[[["self"]],[R[81]]]],[11,"into",E,E,97,[[],[U]]],[11,"from",E,E,97,[[[T]],[T]]],[11,R[82],E,E,97,[[["self"]],[T]]],[11,R[83],E,E,97,[[["self"],[T]]]],[11,R[75],E,E,97,[[[U]],[R[27]]]],[11,R[76],E,E,97,[[],[R[27]]]],[11,R[80],E,E,97,[[["self"]],[T]]],[11,R[77],E,E,97,[[["self"]],[T]]],[11,R[78],E,E,97,[[["self"]],[R[81]]]],[11,"into",E,E,86,[[],[U]]],[11,"from",E,E,86,[[[T]],[T]]],[11,R[82],E,E,86,[[["self"]],[T]]],[11,R[83],E,E,86,[[["self"],[T]]]],[11,R[75],E,E,86,[[[U]],[R[27]]]],[11,R[76],E,E,86,[[],[R[27]]]],[11,R[80],E,E,86,[[["self"]],[T]]],[11,R[77],E,E,86,[[["self"]],[T]]],[11,R[78],E,E,86,[[["self"]],[R[81]]]],[11,"into",E,E,87,[[],[U]]],[11,"from",E,E,87,[[[T]],[T]]],[11,R[82],E,E,87,[[["self"]],[T]]],[11,R[83],E,E,87,[[["self"],[T]]]],[11,R[75],E,E,87,[[[U]],[R[27]]]],[11,R[76],E,E,87,[[],[R[27]]]],[11,R[80],E,E,87,[[["self"]],[T]]],[11,R[77],E,E,87,[[["self"]],[T]]],[11,R[78],E,E,87,[[["self"]],[R[81]]]],[11,"into",E,E,98,[[],[U]]],[11,"from",E,E,98,[[[T]],[T]]],[11,R[75],E,E,98,[[[U]],[R[27]]]],[11,R[76],E,E,98,[[],[R[27]]]],[11,R[80],E,E,98,[[["self"]],[T]]],[11,R[77],E,E,98,[[["self"]],[T]]],[11,R[78],E,E,98,[[["self"]],[R[81]]]],[11,"into",E,E,88,[[],[U]]],[11,"from",E,E,88,[[[T]],[T]]],[11,R[82],E,E,88,[[["self"]],[T]]],[11,R[83],E,E,88,[[["self"],[T]]]],[11,R[75],E,E,88,[[[U]],[R[27]]]],[11,R[76],E,E,88,[[],[R[27]]]],[11,R[80],E,E,88,[[["self"]],[T]]],[11,R[77],E,E,88,[[["self"]],[T]]],[11,R[78],E,E,88,[[["self"]],[R[81]]]],[11,"into",E,E,89,[[],[U]]],[11,"from",E,E,89,[[[T]],[T]]],[11,R[82],E,E,89,[[["self"]],[T]]],[11,R[83],E,E,89,[[["self"],[T]]]],[11,R[75],E,E,89,[[[U]],[R[27]]]],[11,R[76],E,E,89,[[],[R[27]]]],[11,R[80],E,E,89,[[["self"]],[T]]],[11,R[77],E,E,89,[[["self"]],[T]]],[11,R[78],E,E,89,[[["self"]],[R[81]]]],[11,"into",E,E,90,[[],[U]]],[11,"from",E,E,90,[[[T]],[T]]],[11,R[82],E,E,90,[[["self"]],[T]]],[11,R[83],E,E,90,[[["self"],[T]]]],[11,R[75],E,E,90,[[[U]],[R[27]]]],[11,R[76],E,E,90,[[],[R[27]]]],[11,R[80],E,E,90,[[["self"]],[T]]],[11,R[77],E,E,90,[[["self"]],[T]]],[11,R[78],E,E,90,[[["self"]],[R[81]]]],[11,R[97],R[79],E,1,[[["self"]],[R[114]]]],[11,R[97],E,E,10,[[["self"]],[R[117]]]],[11,R[97],E,E,12,[[["self"]],["selfmatcheventkind"]]],[11,R[98],E,E,22,[[["self"],["k"],["f"]]]],[11,R[99],E,E,22,[[["self"],["k"],["f"]]]],[11,R[37],E,E,22,[[["self"],[T],["mutex"]],[[R[10],[R[13]]],[R[27],[R[10]]]]]],[11,"logging",R[87],E,47,[[["self"],[R[28]]],["bool"]]],[11,"write",R[88],E,50,[[["self"],["vec"]],[[R[27],["usize"]],["usize"]]]],[11,"read",R[89],"入力を一行読み取る",53,[[["self"]],[[R[27],[R[28]]],[R[28]]]]],[11,"send",R[90],E,57,[[["vec",[R[38]]],["self"],[R[38]]],[[R[27],[R[39]]],[R[39]]]]],[11,"send",E,E,58,[[["vec",[R[38]]],["self"],[R[38]]],[[R[27],[R[39]]],[R[39]]]]],[11,"write",R[94],"ファイルに棋譜を書き込む",79,[[["self"],[R[28]],["vec"]],[[R[27],[R[47]]],[R[47]]]]],[11,R[101],R[91],E,66,[[["self"]],[[R[27],[R[28],R[100]]],[R[28]],[R[100]]]]],[11,R[101],E,E,59,[[["self"]],[[R[27],[R[28],R[53]]],[R[28]],[R[53],[R[28]]]]]],[11,R[101],E,E,65,[[["self"]],[[R[27],[R[28],R[53]]],[R[28]],[R[53],[R[28]]]]]],[11,R[101],E,E,67,[[["self"]],[[R[27],[R[28],R[53]]],[R[28]],[R[53],[R[28]]]]]],[11,R[101],R[86],E,44,[[["self"]],[[R[28]],[R[27],[R[28],R[102]]],[R[102]]]]],[11,R[101],E,E,39,[[["self"]],[[R[27],[R[28],R[100]]],[R[28]],[R[100]]]]],[11,R[103],E,E,40,[[["self"]],[[R[28]],[R[27],[R[28],R[102]]],[R[102]]]]],[11,R[103],E,E,45,[[["self"]],[[R[28]],[R[27],[R[28],R[102]]],[R[102]]]]],[11,R[103],E,E,38,[[["self"]],[[R[102]],[R[27],["vec",R[102]]],["vec",[R[28]]]]]],[11,R[104],E,E,38,[[["self"]],["bool"]]],[11,R[104],E,E,40,[[["self"]],["bool"]]],[11,R[104],E,E,44,[[["self"]],["bool"]]],[11,R[104],E,E,45,[[["self"]],["bool"]]],[11,R[104],R[91],E,61,[[["self"]],["bool"]]],[11,R[104],E,E,62,[[["self"]],["bool"]]],[11,R[104],E,E,63,[[["self"]],["bool"]]],[11,R[104],E,E,66,[[["self"]],["bool"]]],[11,R[104],R[79],E,13,[[["self"]],["bool"]]],[11,R[75],E,E,13,[[],[[R[53],[R[28]]],[R[27],["moved",R[53]]],["moved"]]]],[11,R[75],R[91],E,68,[[[R[60]]],[[R[55]],[R[53],[R[28]]],[R[27],[R[55],R[53]]]]]],[11,R[75],E,E,69,[[[R[60]]],[[R[27],[R[30],R[53]]],[R[30]],[R[53],[R[28]]]]]],[11,R[75],E,E,69,[[[R[55]]],[[R[27],[R[30],R[53]]],[R[30]],[R[53],[R[28]]]]]],[11,R[75],R[95],E,81,[[[R[133]]],[[R[27],[R[105],R[102]]],[R[105]],[R[102]]]]],[11,R[75],R[91],E,66,[[["str"]],[[R[53],[R[28]]],[R[27],["move",R[53]]],["move"]]]],[11,R[75],E,E,64,[[["str"]],[[R[27],[R[60],R[53]]],[R[60]],[R[53],[R[28]]]]]],[11,R[75],E,E,59,[[["str"]],[[R[27],[R[58],R[53]]],[R[58]],[R[53],[R[28]]]]]],[11,R[75],E,E,65,[[["str"]],[[R[27],["teban",R[53]]],[R[53],[R[28]]],["teban"]]]],[11,R[75],E,E,67,[[["str"]],[[R[41]],[R[53],[R[28]]],[R[27],[R[41],R[53]]]]]],[11,R[106],R[79],E,2,[[],["usize"]]],[11,R[106],E,E,11,[[],["usize"]]],[11,R[106],E,E,18,[[],["usize"]]],[11,R[106],R[91],E,64,[[],["usize"]]],[11,R[106],E,E,69,[[],["usize"]]],[11,"find",E,E,59,[[[R[60]],["self"]],[[R[43],["vec"]],["vec",[R[123]]]]]],[11,"from",R[85],E,25,[[[R[109],[R[107]]],[R[107]]],[R[10]]]],[11,"from",E,E,25,[[[R[108]]],[R[10]]]],[11,"from",E,E,27,[[[R[131]]],[R[100]]]],[11,"from",E,E,28,[[[R[100]]],[R[102]]]],[11,"from",E,E,26,[[[R[102]]],[R[108]]]],[11,"from",E,E,26,[[["e"]],[R[108]]]],[11,"from",E,E,29,[[[R[102]]],[R[39]]]],[11,"from",E,E,30,[[["parseinterror"]],[[R[53],[R[28]]],[R[28]]]]],[11,"from",E,E,32,[[[R[109],[R[107]]],[R[107]]],[R[73]]]],[11,"from",E,E,32,[[["usiagentstartuperror"]],[R[73]]]],[11,"from",E,E,35,[[[R[53],[R[28]]],[R[28]]],[R[52]]]],[11,"from",E,E,35,[[["recverror"]],[R[52]]]],[11,"from",E,E,35,[[[R[111]],["senderror",[R[111]]]],[R[52]]]],[11,"from",E,E,35,[[["error"]],[R[52]]]],[11,"from",E,E,35,[[[R[47]]],[R[52]]]],[11,"from",E,E,35,[[["e"]],[R[52]]]],[11,"from",E,E,36,[[[R[100]]],[R[48]]]],[11,"from",E,E,36,[[[R[53],[R[28]]],[R[28]]],[R[48]]]],[11,"from",E,E,37,[[[R[48]]],[R[47]]]],[11,"from",E,E,37,[[["error"]],[R[47]]]],[11,"from",R[91],E,64,[[],[R[60]]]],[11,"from",R[96],E,95,[[[R[112]]],[R[125]]]],[11,"from",E,E,96,[[[R[113]]],[R[126]]]],[11,"from",E,E,90,[[[R[61]]],[R[44]]]],[11,"from",E,E,90,[[["move"]],[R[44]]]],[11,"from",R[91],E,66,[[[R[61]]],["move"]]],[11,"from",E,E,66,[[[R[44]]],["move"]]],[11,"clone",R[79],E,2,[[["self"]],[R[114]]]],[11,"clone",E,E,3,[[["self"]],[R[115]]]],[11,"clone",E,E,6,[[["self"]],["usigo"]]],[11,"clone",E,E,7,[[["self"]],[R[32]]]],[11,"clone",E,E,8,[[["self"]],[R[116]]]],[11,"clone",E,E,9,[[["self"]],[R[128]]]],[11,"clone",E,E,11,[[["self"]],[R[117]]]],[11,"clone",E,E,13,[[["self"]],["moved"]]],[11,"clone",E,E,14,[[["self"]],[R[129]]]],[11,"clone",E,E,15,[[["self"]],[R[130]]]],[11,"clone",E,E,16,[[["self"]],[R[118]]]],[11,"clone",E,E,17,[[["self"]],[R[138]]]],[11,"clone",R[86],E,39,[[["self"]],[R[31]]]],[11,"clone",E,E,40,[[["self"]],[R[38]]]],[11,"clone",E,E,41,[[["self"]],[R[119]]]],[11,"clone",E,E,42,[[["self"]],[R[134]]]],[11,"clone",E,E,43,[[["self"]],[R[135]]]],[11,"clone",E,E,45,[[["self"]],[R[120]]]],[11,"clone",R[90],E,54,[[["self"]],[R[40]]]],[11,"clone",E,E,57,[[["self"]],[R[121]]]],[11,"clone",E,E,58,[[["self"]],[R[122]]]],[11,"clone",R[91],E,64,[[["self"]],[R[60]]]],[11,"clone",E,E,59,[[["self"]],[R[58]]]],[11,"clone",E,E,65,[[["self"]],["teban"]]],[11,"clone",E,E,60,[[["self"]],[R[123]]]],[11,"clone",E,E,61,[[["self"]],[R[62]]]],[11,"clone",E,E,62,[[["self"]],[R[63]]]],[11,"clone",E,E,63,[[["self"]],[R[64]]]],[11,"clone",E,E,66,[[["self"]],["move"]]],[11,"clone",E,E,67,[[["self"]],[R[41]]]],[11,"clone",E,E,68,[[["self"]],[R[55]]]],[11,"clone",E,E,69,[[["self"]],[R[30]]]],[11,"clone",R[93],E,72,[[["self"]],[R[124]]]],[11,"clone",E,E,73,[[["self"]],[R[68]]]],[11,"clone",R[96],E,89,[[["self"]],[R[61]]]],[11,"clone",E,E,93,[[["self"]],[R[112]]]],[11,"clone",E,E,94,[[["self"]],[R[113]]]],[11,"clone",E,E,90,[[["self"]],[R[44]]]],[11,"clone",E,E,95,[[["self"]],[R[125]]]],[11,"clone",E,E,96,[[["self"]],[R[126]]]],[11,"clone",E,E,88,[[["self"]],[R[59]]]],[11,"clone",E,E,97,[[["self"]],["state"]]],[11,"clone",E,E,86,[[["self"]],[R[65]]]],[11,"clone",E,E,87,[[["self"]],["kyokumen"]]],[11,"eq",R[79],E,2,[[["self"],[R[114]]],["bool"]]],[11,"eq",E,E,3,[[[R[115]],["self"]],["bool"]]],[11,"ne",E,E,3,[[[R[115]],["self"]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[127]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[127]]],["bool"]]],[11,"eq",E,E,6,[[["self"],["usigo"]],["bool"]]],[11,"ne",E,E,6,[[["self"],["usigo"]],["bool"]]],[11,"eq",E,E,7,[[["self"],[R[32]]],["bool"]]],[11,"ne",E,E,7,[[["self"],[R[32]]],["bool"]]],[11,"eq",E,E,8,[[[R[116]],["self"]],["bool"]]],[11,"ne",E,E,8,[[[R[116]],["self"]],["bool"]]],[11,"eq",E,E,9,[[["self"],[R[128]]],["bool"]]],[11,"ne",E,E,9,[[["self"],[R[128]]],["bool"]]],[11,"eq",E,E,11,[[[R[117]],["self"]],["bool"]]],[11,"eq",E,E,13,[[["moved"],["self"]],["bool"]]],[11,"ne",E,E,13,[[["moved"],["self"]],["bool"]]],[11,"eq",E,E,14,[[[R[129]],["self"]],["bool"]]],[11,"eq",E,E,15,[[["self"],[R[130]]],["bool"]]],[11,"ne",E,E,15,[[["self"],[R[130]]],["bool"]]],[11,"eq",E,E,16,[[[R[118]],["self"]],["bool"]]],[11,"eq",E,E,17,[[[R[138]],["self"]],["bool"]]],[11,"eq",R[85],E,23,[[["self"],[R[70]]],["bool"]]],[11,"ne",E,E,23,[[["self"],[R[70]]],["bool"]]],[11,"eq",E,E,24,[[[R[131]],["self"]],["bool"]]],[11,"ne",E,E,24,[[[R[131]],["self"]],["bool"]]],[11,"eq",E,E,27,[[["self"],[R[100]]],["bool"]]],[11,"ne",E,E,27,[[["self"],[R[100]]],["bool"]]],[11,"eq",E,E,28,[[["self"],[R[102]]],["bool"]]],[11,"ne",E,E,28,[[["self"],[R[102]]],["bool"]]],[11,"eq",E,E,29,[[["self"],[R[39]]],["bool"]]],[11,"ne",E,E,29,[[["self"],[R[39]]],["bool"]]],[11,"eq",E,E,30,[[[R[53]],["self"]],["bool"]]],[11,"ne",E,E,30,[[[R[53]],["self"]],["bool"]]],[11,"eq",E,E,33,[[[R[66]],["self"]],["bool"]]],[11,"ne",E,E,33,[[[R[66]],["self"]],["bool"]]],[11,"eq",E,E,34,[[[R[132]],["self"]],["bool"]]],[11,"ne",E,E,34,[[[R[132]],["self"]],["bool"]]],[11,"eq",E,E,36,[[[R[48]],["self"]],["bool"]]],[11,"ne",E,E,36,[[[R[48]],["self"]],["bool"]]],[11,"eq",R[86],E,38,[[["self"],[R[133]]],["bool"]]],[11,"ne",E,E,38,[[["self"],[R[133]]],["bool"]]],[11,"eq",E,E,39,[[[R[31]],["self"]],["bool"]]],[11,"ne",E,E,39,[[[R[31]],["self"]],["bool"]]],[11,"eq",E,E,40,[[[R[38]],["self"]],["bool"]]],[11,"ne",E,E,40,[[[R[38]],["self"]],["bool"]]],[11,"eq",E,E,41,[[[R[119]],["self"]],["bool"]]],[11,"eq",E,E,42,[[[R[134]],["self"]],["bool"]]],[11,"ne",E,E,42,[[[R[134]],["self"]],["bool"]]],[11,"eq",E,E,43,[[[R[135]],["self"]],["bool"]]],[11,"ne",E,E,43,[[[R[135]],["self"]],["bool"]]],[11,"eq",E,E,44,[[[R[35]],["self"]],["bool"]]],[11,"ne",E,E,44,[[[R[35]],["self"]],["bool"]]],[11,"eq",E,E,45,[[["self"],[R[120]]],["bool"]]],[11,"ne",E,E,45,[[["self"],[R[120]]],["bool"]]],[11,"eq",R[91],E,64,[[[R[60]],["self"]],["bool"]]],[11,"eq",E,E,59,[[["self"],[R[58]]],["bool"]]],[11,"ne",E,E,59,[[["self"],[R[58]]],["bool"]]],[11,"eq",E,E,65,[[["teban"],["self"]],["bool"]]],[11,"eq",E,E,60,[[[R[123]],["self"]],["bool"]]],[11,"ne",E,E,60,[[[R[123]],["self"]],["bool"]]],[11,"eq",E,E,61,[[[R[62]],["self"]],["bool"]]],[11,"ne",E,E,61,[[[R[62]],["self"]],["bool"]]],[11,"eq",E,E,62,[[[R[63]],["self"]],["bool"]]],[11,"ne",E,E,62,[[[R[63]],["self"]],["bool"]]],[11,"eq",E,E,63,[[[R[64]],["self"]],["bool"]]],[11,"ne",E,E,63,[[[R[64]],["self"]],["bool"]]],[11,"eq",E,E,66,[[["self"],["move"]],["bool"]]],[11,"ne",E,E,66,[[["self"],["move"]],["bool"]]],[11,"eq",E,E,67,[[["self"]],["bool"]]],[11,"eq",E,E,68,[[[R[55]],["self"]],["bool"]]],[11,"eq",E,E,69,[[[R[30]],["self"]],["bool"]]],[11,"eq",R[95],E,80,[[["self"],[R[54]]],["bool"]]],[11,"ne",E,E,80,[[["self"],[R[54]]],["bool"]]],[11,"eq",R[96],E,89,[[["self"],[R[61]]],["bool"]]],[11,"ne",E,E,89,[[["self"],[R[61]]],["bool"]]],[11,"eq",E,E,93,[[[R[112]],["self"]],["bool"]]],[11,"ne",E,E,93,[[[R[112]],["self"]],["bool"]]],[11,"eq",E,E,94,[[["self"],[R[113]]],["bool"]]],[11,"ne",E,E,94,[[["self"],[R[113]]],["bool"]]],[11,"eq",E,E,90,[[["self"],[R[44]]],["bool"]]],[11,"ne",E,E,90,[[["self"],[R[44]]],["bool"]]],[11,"eq",E,E,95,[[["self"],[R[125]]],["bool"]]],[11,"ne",E,E,95,[[["self"],[R[125]]],["bool"]]],[11,"eq",E,E,96,[[[R[126]],["self"]],["bool"]]],[11,"ne",E,E,96,[[[R[126]],["self"]],["bool"]]],[11,"eq",E,E,88,[[["self"],[R[59]]],["bool"]]],[11,"eq",E,E,97,[[["self"],["state"]],["bool"]]],[11,"ne",E,E,97,[[["self"],["state"]],["bool"]]],[11,"eq",E,E,86,[[["self"],[R[65]]],["bool"]]],[11,"ne",E,E,86,[[["self"],[R[65]]],["bool"]]],[11,R[136],R[79],E,2,[[["self"],[R[114]]],[[R[43],[R[137]]],[R[137]]]]],[11,R[136],E,E,6,[[["self"],["usigo"]],[[R[43],[R[137]]],[R[137]]]]],[11,"lt",E,E,6,[[["self"],["usigo"]],["bool"]]],[11,"le",E,E,6,[[["self"],["usigo"]],["bool"]]],[11,"gt",E,E,6,[[["self"],["usigo"]],["bool"]]],[11,"ge",E,E,6,[[["self"],["usigo"]],["bool"]]],[11,R[136],E,E,7,[[["self"],[R[32]]],[[R[43],[R[137]]],[R[137]]]]],[11,"lt",E,E,7,[[["self"],[R[32]]],["bool"]]],[11,"le",E,E,7,[[["self"],[R[32]]],["bool"]]],[11,"gt",E,E,7,[[["self"],[R[32]]],["bool"]]],[11,"ge",E,E,7,[[["self"],[R[32]]],["bool"]]],[11,R[136],E,E,8,[[[R[116]],["self"]],[[R[43],[R[137]]],[R[137]]]]],[11,"lt",E,E,8,[[[R[116]],["self"]],["bool"]]],[11,"le",E,E,8,[[[R[116]],["self"]],["bool"]]],[11,"gt",E,E,8,[[[R[116]],["self"]],["bool"]]],[11,"ge",E,E,8,[[[R[116]],["self"]],["bool"]]],[11,R[136],E,E,9,[[["self"],[R[128]]],[[R[43],[R[137]]],[R[137]]]]],[11,"lt",E,E,9,[[["self"],[R[128]]],["bool"]]],[11,"le",E,E,9,[[["self"],[R[128]]],["bool"]]],[11,"gt",E,E,9,[[["self"],[R[128]]],["bool"]]],[11,"ge",E,E,9,[[["self"],[R[128]]],["bool"]]],[11,R[136],E,E,11,[[[R[117]],["self"]],[[R[43],[R[137]]],[R[137]]]]],[11,R[136],E,E,13,[[["moved"],["self"]],[[R[43],[R[137]]],[R[137]]]]],[11,"lt",E,E,13,[[["moved"],["self"]],["bool"]]],[11,"le",E,E,13,[[["moved"],["self"]],["bool"]]],[11,"gt",E,E,13,[[["moved"],["self"]],["bool"]]],[11,"ge",E,E,13,[[["moved"],["self"]],["bool"]]],[11,R[136],E,E,14,[[[R[129]],["self"]],[[R[43],[R[137]]],[R[137]]]]],[11,R[136],E,E,15,[[["self"],[R[130]]],[[R[43],[R[137]]],[R[137]]]]],[11,"lt",E,E,15,[[["self"],[R[130]]],["bool"]]],[11,"le",E,E,15,[[["self"],[R[130]]],["bool"]]],[11,"gt",E,E,15,[[["self"],[R[130]]],["bool"]]],[11,"ge",E,E,15,[[["self"],[R[130]]],["bool"]]],[11,R[136],E,E,16,[[[R[118]],["self"]],[[R[43],[R[137]]],[R[137]]]]],[11,R[136],E,E,17,[[[R[138]],["self"]],[[R[43],[R[137]]],[R[137]]]]],[11,R[136],R[86],E,39,[[[R[31]],["self"]],[[R[43],[R[137]]],[R[137]]]]],[11,"lt",E,E,39,[[[R[31]],["self"]],["bool"]]],[11,"le",E,E,39,[[[R[31]],["self"]],["bool"]]],[11,"gt",E,E,39,[[[R[31]],["self"]],["bool"]]],[11,"ge",E,E,39,[[[R[31]],["self"]],["bool"]]],[11,R[136],R[91],E,64,[[[R[60]],["self"]],[[R[43],[R[137]]],[R[137]]]]],[11,R[136],E,E,65,[[["teban"],["self"]],[[R[43],[R[137]]],[R[137]]]]],[11,R[136],E,E,60,[[[R[123]],["self"]],[[R[43],[R[137]]],[R[137]]]]],[11,"lt",E,E,60,[[[R[123]],["self"]],["bool"]]],[11,"le",E,E,60,[[[R[123]],["self"]],["bool"]]],[11,"gt",E,E,60,[[[R[123]],["self"]],["bool"]]],[11,"ge",E,E,60,[[[R[123]],["self"]],["bool"]]],[11,R[136],E,E,61,[[[R[62]],["self"]],[[R[43],[R[137]]],[R[137]]]]],[11,"lt",E,E,61,[[[R[62]],["self"]],["bool"]]],[11,"le",E,E,61,[[[R[62]],["self"]],["bool"]]],[11,"gt",E,E,61,[[[R[62]],["self"]],["bool"]]],[11,"ge",E,E,61,[[[R[62]],["self"]],["bool"]]],[11,R[136],E,E,62,[[[R[63]],["self"]],[[R[43],[R[137]]],[R[137]]]]],[11,"lt",E,E,62,[[[R[63]],["self"]],["bool"]]],[11,"le",E,E,62,[[[R[63]],["self"]],["bool"]]],[11,"gt",E,E,62,[[[R[63]],["self"]],["bool"]]],[11,"ge",E,E,62,[[[R[63]],["self"]],["bool"]]],[11,R[136],E,E,63,[[[R[64]],["self"]],[[R[43],[R[137]]],[R[137]]]]],[11,"lt",E,E,63,[[[R[64]],["self"]],["bool"]]],[11,"le",E,E,63,[[[R[64]],["self"]],["bool"]]],[11,"gt",E,E,63,[[[R[64]],["self"]],["bool"]]],[11,"ge",E,E,63,[[[R[64]],["self"]],["bool"]]],[11,R[136],E,E,66,[[["self"],["move"]],[[R[43],[R[137]]],[R[137]]]]],[11,"lt",E,E,66,[[["self"],["move"]],["bool"]]],[11,"le",E,E,66,[[["self"],["move"]],["bool"]]],[11,"gt",E,E,66,[[["self"],["move"]],["bool"]]],[11,"ge",E,E,66,[[["self"],["move"]],["bool"]]],[11,R[136],E,E,68,[[[R[55]],["self"]],[[R[43],[R[137]]],[R[137]]]]],[11,R[136],E,E,69,[[[R[30]],["self"]],[[R[43],[R[137]]],[R[137]]]]],[11,"fmt",R[79],E,14,[[[R[139]],["self"]],[R[27]]]],[11,"fmt",E,E,13,[[[R[139]],["self"]],[R[27]]]],[11,"fmt",R[85],E,26,[[[R[139]],["self"]],[R[27]]]],[11,"fmt",E,E,25,[[[R[139]],["self"]],[R[27]]]],[11,"fmt",E,E,23,[[[R[139]],["self"]],[R[27]]]],[11,"fmt",E,E,24,[[[R[139]],["self"]],[R[27]]]],[11,"fmt",E,E,27,[[[R[139]],["self"]],[R[27]]]],[11,"fmt",E,E,28,[[[R[139]],["self"]],[R[27]]]],[11,"fmt",E,E,29,[[[R[139]],["self"]],[R[27]]]],[11,"fmt",E,E,30,[[[R[139]],["self"]],[R[27]]]],[11,"fmt",E,E,31,[[[R[139]],["self"]],[R[27]]]],[11,"fmt",E,E,32,[[[R[139]],["self"]],[R[27]]]],[11,"fmt",E,E,33,[[[R[139]],["self"]],[R[27]]]],[11,"fmt",E,E,34,[[[R[139]],["self"]],[R[27]]]],[11,"fmt",E,E,35,[[[R[139]],["self"]],[R[27]]]],[11,"fmt",E,E,36,[[[R[139]],["self"]],[R[27]]]],[11,"fmt",E,E,37,[[[R[139]],["self"]],[R[27]]]],[11,"fmt",R[79],E,1,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",E,E,2,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",E,E,3,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",E,E,4,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",E,E,5,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",E,E,6,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",E,E,7,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",E,E,8,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",E,E,9,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",E,E,10,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",E,E,11,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",E,E,12,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",E,E,13,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",E,E,14,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",E,E,15,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",E,E,16,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",E,E,17,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",E,E,18,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",E,E,21,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",R[85],E,25,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",E,E,26,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",E,E,23,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",E,E,24,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",E,E,27,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",E,E,28,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",E,E,29,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",E,E,30,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",E,E,31,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",E,E,32,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",E,E,33,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",E,E,34,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",E,E,35,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",E,E,36,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",E,E,37,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",R[86],E,38,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",E,E,39,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",E,E,40,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",E,E,41,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",E,E,42,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",E,E,43,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",E,E,44,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",E,E,45,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",R[87],E,47,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",R[90],E,54,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",R[91],E,64,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",E,E,59,[[[R[139]],["self"]],[R[27]]]],[11,"fmt",E,E,65,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",E,E,60,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",E,E,61,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",E,E,62,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",E,E,63,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",E,E,66,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",E,E,67,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",E,E,68,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",E,E,69,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",R[94],E,79,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",E,E,77,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",E,E,75,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",E,E,76,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",R[95],E,81,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",E,E,80,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",R[96],E,89,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",E,E,93,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",E,E,94,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",E,E,90,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",E,E,95,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",E,E,96,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",E,E,88,[[[R[139]],["self"]],[R[27]]]],[11,"fmt",E,E,97,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",E,E,86,[[["self"],[R[139]]],[R[27]]]],[11,"fmt",R[14],E,104,[[["self"],[R[139]]],[R[27]]]],[11,"not",R[96],E,88,[[],["self"]]],[11,"bitor",E,E,88,[[],["self"]]],[11,"hash",R[86],E,41,[[["self"],["__h"]]]],[11,"hash",R[91],E,69,[[["self"],["__h"]]]],[11,R[140],R[85],E,26,[[["self"]],["str"]]],[11,"source",E,E,26,[[["self"]],[["error"],[R[43],["error"]]]]],[11,R[140],E,E,25,[[["self"]],["str"]]],[11,"source",E,E,25,[[["self"]],[["error"],[R[43],["error"]]]]],[11,R[140],E,E,23,[[["self"]],["str"]]],[11,"source",E,E,23,[[["self"]],[["error"],[R[43],["error"]]]]],[11,R[140],E,E,24,[[["self"]],["str"]]],[11,"source",E,E,24,[[["self"]],[["error"],[R[43],["error"]]]]],[11,R[140],E,E,27,[[["self"]],["str"]]],[11,"source",E,E,27,[[["self"]],[["error"],[R[43],["error"]]]]],[11,R[140],E,E,28,[[["self"]],["str"]]],[11,"source",E,E,28,[[["self"]],[["error"],[R[43],["error"]]]]],[11,R[140],E,E,29,[[["self"]],["str"]]],[11,"source",E,E,29,[[["self"]],[["error"],[R[43],["error"]]]]],[11,R[140],E,E,30,[[["self"]],["str"]]],[11,"source",E,E,30,[[["self"]],[["error"],[R[43],["error"]]]]],[11,R[140],E,E,31,[[["self"]],["str"]]],[11,"source",E,E,31,[[["self"]],[["error"],[R[43],["error"]]]]],[11,R[140],E,E,32,[[["self"]],["str"]]],[11,"source",E,E,32,[[["self"]],[["error"],[R[43],["error"]]]]],[11,R[140],E,E,33,[[["self"]],["str"]]],[11,"source",E,E,33,[[["self"]],[["error"],[R[43],["error"]]]]],[11,R[140],E,E,34,[[["self"]],["str"]]],[11,"source",E,E,34,[[["self"]],[["error"],[R[43],["error"]]]]],[11,R[140],E,E,35,[[["self"]],["str"]]],[11,"source",E,E,35,[[["self"]],[["error"],[R[43],["error"]]]]],[11,R[140],E,E,36,[[["self"]],["str"]]],[11,"source",E,E,36,[[["self"]],[["error"],[R[43],["error"]]]]],[11,R[140],E,E,37,[[["self"]],["str"]]],[11,"source",E,E,37,[[["self"]],[["error"],[R[43],["error"]]]]]],"p":[[4,R[141]],[4,R[142]],[4,R[143]],[4,R[144]],[4,R[145]],[4,R[146]],[4,"UsiGo"],[4,R[147]],[4,R[148]],[4,R[149]],[4,R[150]],[4,R[151]],[4,R[152]],[4,"Moved"],[4,R[153]],[4,R[154]],[4,R[155]],[4,"FoulKind"],[4,R[156]],[8,R[157]],[8,R[158]],[3,R[159]],[3,R[160]],[3,R[15]],[3,R[161]],[4,R[162]],[4,R[163]],[4,R[164]],[4,R[165]],[4,R[167]],[4,R[20]],[4,R[168]],[4,R[169]],[4,R[170]],[4,R[171]],[4,R[172]],[4,R[22]],[4,R[21]],[4,R[173]],[4,"BestMove"],[4,R[174]],[4,R[175]],[4,"UsiScore"],[4,R[176]],[4,R[177]],[4,R[178]],[8,"Logger"],[3,R[179]],[8,R[180]],[8,R[181]],[3,R[182]],[3,R[183]],[8,R[184]],[3,R[185]],[4,R[186]],[8,R[187]],[8,R[188]],[3,R[189]],[3,R[190]],[3,"Banmen"],[3,R[191]],[3,R[192]],[3,R[193]],[3,R[194]],[4,"KomaKind"],[4,"Teban"],[4,"Move"],[4,R[195]],[4,R[196]],[4,R[197]],[3,R[198]],[8,R[199]],[3,R[200]],[3,R[201]],[3,R[202]],[3,R[203]],[3,R[204]],[4,R[205]],[8,R[206]],[3,R[207]],[3,R[208]],[4,R[209]],[8,"ToSfen"],[8,R[210]],[3,R[211]],[3,"GoParser"],[3,R[212]],[3,"Kyokumen"],[19,"BitBoard"],[4,R[213]],[4,R[214]],[8,R[215]],[8,"Validate"],[3,R[216]],[3,R[217]],[3,R[218]],[3,R[219]],[3,"State"],[3,"Rule"],[8,"TryFrom"],[8,"MaxIndex"],[8,"Find"],[3,R[220]],[3,"SandBox"],[3,"UsiAgent"]]};
initSearch(searchIndex);addSearchOptions(searchIndex);